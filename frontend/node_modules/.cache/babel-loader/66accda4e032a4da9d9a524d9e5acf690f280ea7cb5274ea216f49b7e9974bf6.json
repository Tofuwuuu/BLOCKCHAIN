{"ast":null,"code":"import axios from'axios';// API base configuration\n// Use proxy in development (package.json \"proxy\"), otherwise honor env var\nconst isDev=process.env.NODE_ENV!=='production';const API_BASE_URL=isDev?'http://localhost:3002':process.env.REACT_APP_API_URL||'https://your-api.example.com';// Create axios instance with default config\nconst api=axios.create({baseURL:API_BASE_URL,timeout:10000,headers:{'Content-Type':'application/json'},withCredentials:false});// Request interceptor to add auth token or session cookie\napi.interceptors.request.use(config=>{// Check for auth token in localStorage\nconst token=localStorage.getItem('authToken');if(token&&config.headers){config.headers.Authorization=\"Bearer \".concat(token);}// Ensure headers object exists\nif(!config.headers){config.headers={};}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Clear auth token and redirect to login\nlocalStorage.removeItem('authToken');window.location.href='/login';}return Promise.reject(error);});// Standard API response interface\n// Helper method to handle API responses\nconst handleApiResponse=response=>({ok:true,data:response.data});// Helper method to handle API errors\nconst handleApiError=error=>{var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message||'An error occurred';return{ok:false,error:errorMessage};};// Helper methods with standardized response format\nexport const httpService={// GET request\nget:async(url,config)=>{try{const response=await api.get(url,config);return handleApiResponse(response);}catch(error){return handleApiError(error);}},// POST request\npost:async(url,data,config)=>{try{const response=await api.post(url,data,config);return handleApiResponse(response);}catch(error){return handleApiError(error);}},// PUT request\nput:async(url,data,config)=>{try{const response=await api.put(url,data,config);return handleApiResponse(response);}catch(error){return handleApiError(error);}},// DELETE request\ndelete:async(url,config)=>{try{const response=await api.delete(url,config);return handleApiResponse(response);}catch(error){return handleApiError(error);}},// PATCH request\npatch:async(url,data,config)=>{try{const response=await api.patch(url,data,config);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// ===== TYPES =====\n// Blockchain Types\n// Procurement Types\n// Form Types\n// ===== SETTINGS TYPES =====\n// ===== API SERVICE =====\nexport const apiService={// ===== AUTHENTICATION =====\nlogin:async credentials=>{try{const response=await api.post('/api/auth/login',credentials);return response.data;}catch(error){console.error('Login API error:',error);throw error;}},logout:async()=>{try{const response=await api.post('/api/auth/logout');return response.data;}catch(error){console.error('Logout API error:',error);throw error;}},getCurrentUser:async()=>{try{const response=await api.get('/api/auth/me');return response.data;}catch(error){console.error('Get current user API error:',error);throw error;}},// ===== DASHBOARD =====\ngetDashboardStats:async()=>{const response=await api.get('/api/stats');return response.data;},getChain:async()=>{const response=await api.get('/chain');return response.data;},// ===== BLOCKCHAIN =====\ngetBlockchain:async()=>{const response=await api.get('/chain');return response.data;},getBlock:async index=>{const response=await api.get(\"/chain/block/\".concat(index));return response.data;},createTransaction:async data=>{const response=await api.post('/transactions/new',data);return response.data;},mineBlock:async()=>{const response=await api.get('/mine');return response.data;},// ===== PEERS =====\ngetPeers:async()=>{const response=await api.get('/peers');return response.data.peers||[];},addPeer:async url=>{// Parse URL to extract host and port\nconst urlObj=new URL(url);const host=urlObj.hostname;const port=parseInt(urlObj.port);const response=await api.post('/add_peer',{host,port,nodeId:\"node-\".concat(Date.now())});return response.data;},// ===== SUPPLIERS =====\ngetSuppliers:async()=>{const response=await api.get('/api/suppliers');return response.data;},getSupplier:async id=>{const response=await api.get(\"/api/suppliers/\".concat(id));return response.data;},createSupplier:async data=>{const response=await api.post('/api/suppliers',data);return response.data;},updateSupplier:async(id,data)=>{const response=await api.put(\"/api/suppliers/\".concat(id),data);return response.data;},deleteSupplier:async id=>{const response=await api.delete(\"/api/suppliers/\".concat(id));return response.data;},// ===== PURCHASE ORDERS =====\ngetOrders:async()=>{const response=await api.get('/api/orders');return response.data;},getOrder:async id=>{const response=await api.get(\"/api/orders/\".concat(id));return response.data;},createOrder:async data=>{const response=await api.post('/api/orders',data);return response.data;},updateOrder:async(id,data)=>{const response=await api.put(\"/api/orders/\".concat(id),data);return response.data;},deleteOrder:async id=>{const response=await api.delete(\"/api/orders/\".concat(id));return response.data;},approveOrder:async id=>{const response=await api.post(\"/api/orders/\".concat(id,\"/approve\"));return response.data;},// ===== INVENTORY =====\ngetInventory:async()=>{const response=await api.get('/api/inventory');return response.data;},getInventoryItem:async id=>{const response=await api.get(\"/api/inventory/\".concat(id));return response.data;},adjustInventory:async data=>{const response=await api.post('/api/inventory/adjust',data);return response.data;},// ===== PRODUCTS =====\ngetProducts:async()=>{const response=await api.get('/api/products');return response.data;},getProduct:async id=>{const response=await api.get(\"/api/products/\".concat(id));return response.data;},createProduct:async data=>{const response=await api.post('/api/products',data);return response.data;},updateProduct:async(id,data)=>{const response=await api.put(\"/api/products/\".concat(id),data);return response.data;},deleteProduct:async id=>{const response=await api.delete(\"/api/products/\".concat(id));return response.data;},// ===== USER MANAGEMENT =====\ngetUsers:async()=>{const response=await api.get('/api/users');return response.data;},getUser:async id=>{const response=await api.get(\"/api/users/\".concat(id));return response.data;},createUser:async data=>{const response=await api.post('/api/users',data);return response.data;},updateUser:async(id,data)=>{const response=await api.put(\"/api/users/\".concat(id),data);return response.data;},updateUserPassword:async(id,password)=>{const response=await api.put(\"/api/users/\".concat(id,\"/password\"),{password});return response.data;},deleteUser:async id=>{const response=await api.delete(\"/api/users/\".concat(id));return response.data;},getRoles:async()=>{const response=await api.get('/api/roles');return response.data;},// ===== SETTINGS =====\ngetSystemSettings:async()=>{const response=await api.get('/api/settings/system');return response.data;},updateSystemSettings:async data=>{const response=await api.put('/api/settings/system',data);return response.data;},getUserPreferences:async()=>{const response=await api.get('/api/settings/preferences');return response.data;},updateUserPreferences:async data=>{const response=await api.put('/api/settings/preferences',data);return response.data;},getSystemInfo:async()=>{const response=await api.get('/api/settings/system-info');return response.data;},exportSystemData:async()=>{const response=await api.post('/api/settings/export');return response.data;},importSystemData:async file=>{const formData=new FormData();formData.append('file',file);const response=await api.post('/api/settings/import',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}};export default api;","map":{"version":3,"names":["axios","isDev","process","env","NODE_ENV","API_BASE_URL","REACT_APP_API_URL","api","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","handleApiResponse","ok","data","handleApiError","_error$response2","_error$response2$data","errorMessage","message","httpService","get","url","post","put","delete","patch","apiService","login","credentials","console","logout","getCurrentUser","getDashboardStats","getChain","getBlockchain","getBlock","index","createTransaction","mineBlock","getPeers","peers","addPeer","urlObj","URL","host","hostname","port","parseInt","nodeId","Date","now","getSuppliers","getSupplier","id","createSupplier","updateSupplier","deleteSupplier","getOrders","getOrder","createOrder","updateOrder","deleteOrder","approveOrder","getInventory","getInventoryItem","adjustInventory","getProducts","getProduct","createProduct","updateProduct","deleteProduct","getUsers","getUser","createUser","updateUser","updateUserPassword","password","deleteUser","getRoles","getSystemSettings","updateSystemSettings","getUserPreferences","updateUserPreferences","getSystemInfo","exportSystemData","importSystemData","file","formData","FormData","append"],"sources":["F:/Project/BLOCKCHAIN/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse, AxiosError, AxiosRequestConfig } from 'axios';\r\n\r\n// API base configuration\r\n// Use proxy in development (package.json \"proxy\"), otherwise honor env var\r\nconst isDev = process.env.NODE_ENV !== 'production';\r\nconst API_BASE_URL = isDev ? 'http://localhost:3002' : (process.env.REACT_APP_API_URL || 'https://your-api.example.com');\r\n\r\n// Create axios instance with default config\r\nconst api: AxiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: false,\r\n});\r\n\r\n// Request interceptor to add auth token or session cookie\r\napi.interceptors.request.use(\r\n  (config: AxiosRequestConfig) => {\r\n    // Check for auth token in localStorage\r\n    const token = localStorage.getItem('authToken');\r\n    \r\n    if (token && config.headers) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Ensure headers object exists\r\n    if (!config.headers) {\r\n      config.headers = {};\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error: AxiosError) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response: AxiosResponse) => response,\r\n  (error: AxiosError) => {\r\n    if (error.response?.status === 401) {\r\n      // Clear auth token and redirect to login\r\n      localStorage.removeItem('authToken');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Standard API response interface\r\nexport interface ApiResponse<T = any> {\r\n  ok: boolean;\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\n// Helper method to handle API responses\r\nconst handleApiResponse = <T>(response: AxiosResponse<T>): ApiResponse<T> => ({\r\n  ok: true,\r\n  data: response.data,\r\n});\r\n\r\n// Helper method to handle API errors\r\nconst handleApiError = (error: AxiosError): ApiResponse => {\r\n  const errorMessage = (error.response?.data as any)?.message || error.message || 'An error occurred';\r\n  return {\r\n    ok: false,\r\n    error: errorMessage,\r\n  };\r\n};\r\n\r\n// Helper methods with standardized response format\r\nexport const httpService = {\r\n  // GET request\r\n  get: async <T = any>(url: string, config?: AxiosRequestConfig): Promise<ApiResponse<T>> => {\r\n    try {\r\n      const response = await api.get<T>(url, config);\r\n      return handleApiResponse(response);\r\n    } catch (error) {\r\n      return handleApiError(error as AxiosError);\r\n    }\r\n  },\r\n\r\n  // POST request\r\n  post: async <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<ApiResponse<T>> => {\r\n    try {\r\n      const response = await api.post<T>(url, data, config);\r\n      return handleApiResponse(response);\r\n    } catch (error) {\r\n      return handleApiError(error as AxiosError);\r\n    }\r\n  },\r\n\r\n  // PUT request\r\n  put: async <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<ApiResponse<T>> => {\r\n    try {\r\n      const response = await api.put<T>(url, data, config);\r\n      return handleApiResponse(response);\r\n    } catch (error) {\r\n      return handleApiError(error as AxiosError);\r\n    }\r\n  },\r\n\r\n  // DELETE request\r\n  delete: async <T = any>(url: string, config?: AxiosRequestConfig): Promise<ApiResponse<T>> => {\r\n    try {\r\n      const response = await api.delete<T>(url, config);\r\n      return handleApiResponse(response);\r\n    } catch (error) {\r\n      return handleApiError(error as AxiosError);\r\n    }\r\n  },\r\n\r\n  // PATCH request\r\n  patch: async <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<ApiResponse<T>> => {\r\n    try {\r\n      const response = await api.patch<T>(url, data, config);\r\n      return handleApiResponse(response);\r\n    } catch (error) {\r\n      return handleApiError(error as AxiosError);\r\n    }\r\n  },\r\n};\r\n\r\n// ===== TYPES =====\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  full_name: string;\r\n  position: string;\r\n  department: string;\r\n  role: string;\r\n  is_admin: boolean;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface CreateUserData {\r\n  username: string;\r\n  password: string;\r\n  full_name: string;\r\n  position: string;\r\n  department: string;\r\n  role: string;\r\n}\r\n\r\nexport interface DashboardStats {\r\n  pending_orders: number;\r\n  approved_orders: number;\r\n  low_inventory: number;\r\n  recent_orders: RecentOrder[];\r\n}\r\n\r\nexport interface RecentOrder {\r\n  id: number;\r\n  po_number: string;\r\n  supplier: {\r\n    name: string;\r\n  };\r\n  date_created: string;\r\n  status: string;\r\n  total_amount: number;\r\n}\r\n\r\n// Blockchain Types\r\nexport interface Block {\r\n  index: number;\r\n  timestamp: string;\r\n  transactions: Transaction[];\r\n  nonce: number;\r\n  previous_hash: string;\r\n  hash: string;\r\n}\r\n\r\nexport interface Transaction {\r\n  from: string;\r\n  to: string;\r\n  amount: number;\r\n  action: string;\r\n  data?: any;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface Chain {\r\n  chain: Block[];\r\n  length: number;\r\n}\r\n\r\nexport interface Peer {\r\n  id: string;\r\n  url: string;\r\n  is_active: boolean;\r\n}\r\n\r\n// Procurement Types\r\nexport interface Supplier {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n  province: string;\r\n  contact_person: string;\r\n  phone: string;\r\n  email?: string;\r\n  bir_tin: string;\r\n  is_active: boolean;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface PurchaseOrder {\r\n  id: number;\r\n  po_number: string;\r\n  supplier_id: number;\r\n  supplier: Supplier;\r\n  delivery_address: string;\r\n  notes?: string;\r\n  status: 'Draft' | 'Pending' | 'Approved' | 'Completed' | 'Cancelled';\r\n  total_amount: number;\r\n  date_created: string;\r\n  date_updated: string;\r\n  items: OrderItem[];\r\n}\r\n\r\nexport interface OrderItem {\r\n  id: number;\r\n  product_id: number;\r\n  product: Product;\r\n  quantity: number;\r\n  unit_price: number;\r\n  total_price: number;\r\n}\r\n\r\nexport interface Product {\r\n  id: number;\r\n  name: string;\r\n  description?: string;\r\n  unit: string;\r\n  unit_price: number;\r\n  category: string;\r\n  is_active: boolean;\r\n}\r\n\r\nexport interface Inventory {\r\n  id: number;\r\n  product_id: number;\r\n  product: Product;\r\n  quantity: number;\r\n  unit_price: number;\r\n  total_value: number;\r\n  last_updated: string;\r\n}\r\n\r\nexport interface InventoryAdjustment {\r\n  id: number;\r\n  product_id: number;\r\n  product: Product;\r\n  adjustment: number;\r\n  reason: string;\r\n  adjusted_by: string;\r\n  date_adjusted: string;\r\n}\r\n\r\n// Form Types\r\nexport interface CreateSupplierData {\r\n  name: string;\r\n  address: string;\r\n  province: string;\r\n  contact_person: string;\r\n  phone: string;\r\n  email?: string;\r\n  bir_tin: string;\r\n  is_active: boolean;\r\n}\r\n\r\nexport interface CreateOrderData {\r\n  supplier_id: number;\r\n  delivery_address: string;\r\n  notes?: string;\r\n  items: {\r\n    product_id: number;\r\n    quantity: number;\r\n    unit_price: number;\r\n  }[];\r\n}\r\n\r\nexport interface CreateTransactionData {\r\n  from: string;\r\n  to: string;\r\n  amount: number;\r\n  action: string;\r\n  data?: any;\r\n}\r\n\r\n// ===== SETTINGS TYPES =====\r\nexport interface SystemSettings {\r\n  company_name: string;\r\n  company_address: string;\r\n  company_phone: string;\r\n  company_email: string;\r\n  bir_tin: string;\r\n  system_language: string;\r\n  timezone: string;\r\n  currency: string;\r\n  date_format: string;\r\n  notifications_enabled: boolean;\r\n  email_notifications: boolean;\r\n  audit_logging: boolean;\r\n  maintenance_mode: boolean;\r\n  updated_at: string;\r\n  updated_by: string;\r\n}\r\n\r\nexport interface UserPreferences {\r\n  user_id: number;\r\n  language: string;\r\n  theme: 'light' | 'dark' | 'auto';\r\n  email_notifications: boolean;\r\n  order_updates: boolean;\r\n  system_alerts: boolean;\r\n  dashboard_layout: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface UpdateSystemSettingsData {\r\n  company_name?: string;\r\n  company_address?: string;\r\n  company_phone?: string;\r\n  company_email?: string;\r\n  bir_tin?: string;\r\n  system_language?: string;\r\n  timezone?: string;\r\n  currency?: string;\r\n  date_format?: string;\r\n  notifications_enabled?: boolean;\r\n  email_notifications?: boolean;\r\n  audit_logging?: boolean;\r\n  maintenance_mode?: boolean;\r\n}\r\n\r\nexport interface UpdateUserPreferencesData {\r\n  language?: string;\r\n  theme?: 'light' | 'dark' | 'auto';\r\n  email_notifications?: boolean;\r\n  order_updates?: boolean;\r\n  system_alerts?: boolean;\r\n  dashboard_layout?: string;\r\n}\r\n\r\n\r\n\r\n// ===== API SERVICE =====\r\n\r\nexport const apiService = {\r\n  // ===== AUTHENTICATION =====\r\n  login: async (credentials: { username: string; password: string }) => {\r\n    try {\r\n      const response = await api.post('/api/auth/login', credentials);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login API error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  logout: async () => {\r\n    try {\r\n      const response = await api.post('/api/auth/logout');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Logout API error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getCurrentUser: async (): Promise<User> => {\r\n    try {\r\n      const response = await api.get('/api/auth/me');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get current user API error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ===== DASHBOARD =====\r\n  getDashboardStats: async (): Promise<DashboardStats> => {\r\n    const response = await api.get('/api/stats');\r\n    return response.data;\r\n  },\r\n  \r\n  getChain: async (): Promise<DashboardStats> => {\r\n    const response = await api.get('/chain');\r\n    return response.data;\r\n  },\r\n\r\n  // ===== BLOCKCHAIN =====\r\n  getBlockchain: async (): Promise<Chain> => {\r\n    const response = await api.get('/chain');\r\n    return response.data;\r\n  },\r\n\r\n  getBlock: async (index: number): Promise<Block> => {\r\n    const response = await api.get(`/chain/block/${index}`);\r\n    return response.data;\r\n  },\r\n\r\n  createTransaction: async (data: CreateTransactionData): Promise<Transaction> => {\r\n    const response = await api.post('/transactions/new', data);\r\n    return response.data;\r\n  },\r\n\r\n  mineBlock: async (): Promise<Block> => {\r\n    const response = await api.get('/mine');\r\n    return response.data;\r\n  },\r\n\r\n  // ===== PEERS =====\r\n  getPeers: async (): Promise<Peer[]> => {\r\n    const response = await api.get('/peers');\r\n    return response.data.peers || [];\r\n  },\r\n\r\n  addPeer: async (url: string): Promise<Peer> => {\r\n    // Parse URL to extract host and port\r\n    const urlObj = new URL(url);\r\n    const host = urlObj.hostname;\r\n    const port = parseInt(urlObj.port);\r\n    \r\n    const response = await api.post('/add_peer', { \r\n      host, \r\n      port, \r\n      nodeId: `node-${Date.now()}` \r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // ===== SUPPLIERS =====\r\n  getSuppliers: async (): Promise<Supplier[]> => {\r\n    const response = await api.get('/api/suppliers');\r\n    return response.data;\r\n  },\r\n\r\n  getSupplier: async (id: number): Promise<Supplier> => {\r\n    const response = await api.get(`/api/suppliers/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createSupplier: async (data: CreateSupplierData): Promise<Supplier> => {\r\n    const response = await api.post('/api/suppliers', data);\r\n    return response.data;\r\n  },\r\n\r\n  updateSupplier: async (id: number, data: Partial<CreateSupplierData>): Promise<Supplier> => {\r\n    const response = await api.put(`/api/suppliers/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  deleteSupplier: async (id: number): Promise<void> => {\r\n    const response = await api.delete(`/api/suppliers/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // ===== PURCHASE ORDERS =====\r\n  getOrders: async (): Promise<PurchaseOrder[]> => {\r\n    const response = await api.get('/api/orders');\r\n    return response.data;\r\n  },\r\n\r\n  getOrder: async (id: number): Promise<PurchaseOrder> => {\r\n    const response = await api.get(`/api/orders/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createOrder: async (data: CreateOrderData): Promise<PurchaseOrder> => {\r\n    const response = await api.post('/api/orders', data);\r\n    return response.data;\r\n  },\r\n\r\n  updateOrder: async (id: number, data: Partial<CreateOrderData>): Promise<PurchaseOrder> => {\r\n    const response = await api.put(`/api/orders/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  deleteOrder: async (id: number): Promise<void> => {\r\n    const response = await api.delete(`/api/orders/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  approveOrder: async (id: number): Promise<PurchaseOrder> => {\r\n    const response = await api.post(`/api/orders/${id}/approve`);\r\n    return response.data;\r\n  },\r\n\r\n  // ===== INVENTORY =====\r\n  getInventory: async (): Promise<Inventory[]> => {\r\n    const response = await api.get('/api/inventory');\r\n    return response.data;\r\n  },\r\n\r\n  getInventoryItem: async (id: number): Promise<Inventory> => {\r\n    const response = await api.get(`/api/inventory/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  adjustInventory: async (data: { product_id: number; adjustment: number; reason: string }): Promise<InventoryAdjustment> => {\r\n    const response = await api.post('/api/inventory/adjust', data);\r\n    return response.data;\r\n  },\r\n\r\n  // ===== PRODUCTS =====\r\n  getProducts: async (): Promise<Product[]> => {\r\n    const response = await api.get('/api/products');\r\n    return response.data;\r\n  },\r\n\r\n  getProduct: async (id: number): Promise<Product> => {\r\n    const response = await api.get(`/api/products/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createProduct: async (data: Omit<Product, 'id'>): Promise<Product> => {\r\n    const response = await api.post('/api/products', data);\r\n    return response.data;\r\n  },\r\n\r\n  updateProduct: async (id: number, data: Partial<Product>): Promise<Product> => {\r\n    const response = await api.put(`/api/products/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  deleteProduct: async (id: number): Promise<void> => {\r\n    const response = await api.delete(`/api/products/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // ===== USER MANAGEMENT =====\r\n  getUsers: async (): Promise<User[]> => {\r\n    const response = await api.get('/api/users');\r\n    return response.data;\r\n  },\r\n\r\n  getUser: async (id: number): Promise<User> => {\r\n    const response = await api.get(`/api/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createUser: async (data: CreateUserData): Promise<User> => {\r\n    const response = await api.post('/api/users', data);\r\n    return response.data;\r\n  },\r\n\r\n  updateUser: async (id: number, data: Partial<CreateUserData>): Promise<User> => {\r\n    const response = await api.put(`/api/users/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  updateUserPassword: async (id: number, password: string): Promise<{ message: string }> => {\r\n    const response = await api.put(`/api/users/${id}/password`, { password });\r\n    return response.data;\r\n  },\r\n\r\n  deleteUser: async (id: number): Promise<void> => {\r\n    const response = await api.delete(`/api/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getRoles: async (): Promise<{ roles: string[]; descriptions: Record<string, string> }> => {\r\n    const response = await api.get('/api/roles');\r\n    return response.data;\r\n  },\r\n\r\n  // ===== SETTINGS =====\r\n  getSystemSettings: async (): Promise<SystemSettings> => {\r\n    const response = await api.get('/api/settings/system');\r\n    return response.data;\r\n  },\r\n\r\n  updateSystemSettings: async (data: UpdateSystemSettingsData): Promise<SystemSettings> => {\r\n    const response = await api.put('/api/settings/system', data);\r\n    return response.data;\r\n  },\r\n\r\n  getUserPreferences: async (): Promise<UserPreferences> => {\r\n    const response = await api.get('/api/settings/preferences');\r\n    return response.data;\r\n  },\r\n\r\n  updateUserPreferences: async (data: UpdateUserPreferencesData): Promise<UserPreferences> => {\r\n    const response = await api.put('/api/settings/preferences', data);\r\n    return response.data;\r\n  },\r\n\r\n  getSystemInfo: async (): Promise<{\r\n    version: string;\r\n    environment: string;\r\n    database: string;\r\n    uptime: number;\r\n    last_backup: string;\r\n  }> => {\r\n    const response = await api.get('/api/settings/system-info');\r\n    return response.data;\r\n  },\r\n\r\n  exportSystemData: async (): Promise<{ download_url: string }> => {\r\n    const response = await api.post('/api/settings/export');\r\n    return response.data;\r\n  },\r\n\r\n  importSystemData: async (file: File): Promise<{ message: string; imported_count: number }> => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    const response = await api.post('/api/settings/import', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' }\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}