{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\BLOCKCHAIN\\\\frontend\\\\src\\\\pages\\\\Users.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Card, Table, Button, Badge, Form, Modal, InputGroup } from 'react-bootstrap';\nimport { apiService } from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport Toast from '../components/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Mock data for demonstration\nconst mockUsers = [{\n  id: 1,\n  username: \"admin\",\n  full_name: \"System Administrator\",\n  position: \"System Administrator\",\n  department: \"IT Department\",\n  role: \"admin\",\n  is_admin: true,\n  created_at: \"2024-01-01T00:00:00Z\",\n  updated_at: \"2024-01-01T00:00:00Z\"\n}, {\n  id: 2,\n  username: \"procurement0\",\n  full_name: \"Juan Dela Cruz\",\n  position: \"Procurement Officer\",\n  department: \"Procurement Department\",\n  role: \"procurement\",\n  is_admin: false,\n  created_at: \"2025-08-15T10:30:00Z\",\n  updated_at: \"2025-08-15T10:30:00Z\"\n}, {\n  id: 3,\n  username: \"procurement1\",\n  full_name: \"Maria Santos\",\n  position: \"Senior Procurement Officer\",\n  department: \"Procurement Department\",\n  role: \"procurement\",\n  is_admin: false,\n  created_at: \"2025-08-14T14:20:00Z\",\n  updated_at: \"2025-08-14T14:20:00Z\"\n}, {\n  id: 4,\n  username: \"procurement2\",\n  full_name: \"Pedro Martinez\",\n  position: \"Procurement Specialist\",\n  department: \"Procurement Department\",\n  role: \"procurement\",\n  is_admin: false,\n  created_at: \"2025-08-13T09:15:00Z\",\n  updated_at: \"2025-08-13T09:15:00Z\"\n}, {\n  id: 5,\n  username: \"validator1\",\n  full_name: \"Ana Reyes\",\n  position: \"Validation Officer\",\n  department: \"Quality Assurance\",\n  role: \"validator\",\n  is_admin: false,\n  created_at: \"2025-08-12T16:45:00Z\",\n  updated_at: \"2025-08-12T16:45:00Z\"\n}, {\n  id: 6,\n  username: \"finance1\",\n  full_name: \"Carlos Lopez\",\n  position: \"Finance Manager\",\n  department: \"Finance Department\",\n  role: \"finance\",\n  is_admin: false,\n  created_at: \"2025-08-11T11:30:00Z\",\n  updated_at: \"2025-08-11T11:30:00Z\"\n}];\nconst mockRoles = ['admin', 'procurement', 'validator', 'supplier', 'auditor', 'finance'];\nconst roleDescriptions = {\n  'admin': 'Full system access and user management',\n  'procurement': 'Create and manage purchase orders',\n  'validator': 'Approve and validate transactions',\n  'supplier': 'View and manage supplier information',\n  'auditor': 'Access audit logs and reports',\n  'finance': 'Financial reporting and analysis'\n};\nconst Users = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [usingMockData, setUsingMockData] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastType, setToastType] = useState('info');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    full_name: '',\n    position: '',\n    department: '',\n    role: 'procurement'\n  });\n  const [errors, setErrors] = useState({});\n\n  // Check if user is admin\n  useEffect(() => {\n    if (user && !user.is_admin) {\n      setToastMessage('Access denied. Admin privileges required.');\n      setToastType('error');\n      setShowToast(true);\n      setTimeout(() => navigate('/dashboard'), 2000);\n    }\n  }, [user, navigate]);\n\n  // Load users\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.is_admin) {\n      fetchUsers();\n    }\n  }, [user]);\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n\n      // Try to fetch from API first\n      try {\n        const response = await apiService.getUsers();\n        setUsers(response);\n        setUsingMockData(false);\n      } catch (apiError) {\n        console.log('API not available, using mock data...');\n        // Use mock data if API fails\n        setUsers(mockUsers);\n        setUsingMockData(true);\n\n        // Show warning toast\n        setToastMessage('Using demo data - backend not available');\n        setToastType('warning');\n        setShowToast(true);\n      }\n    } catch (error) {\n      console.error('Failed to load users:', error);\n      // Fallback to mock data\n      setUsers(mockUsers);\n      setUsingMockData(true);\n      setToastMessage('Failed to load users, using demo data');\n      setToastType('warning');\n      setShowToast(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    }\n    if (!editingUser && !formData.password.trim()) {\n      newErrors.password = 'Password is required';\n    }\n    if (!formData.full_name.trim()) {\n      newErrors.full_name = 'Full name is required';\n    }\n    if (!formData.position.trim()) {\n      newErrors.position = 'Position is required';\n    }\n    if (!formData.department.trim()) {\n      newErrors.department = 'Department is required';\n    }\n    if (!formData.role) {\n      newErrors.role = 'Role is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    try {\n      if (usingMockData) {\n        // Simulate API call for mock data\n        if (editingUser) {\n          const updatedUsers = users.map(u => u.id === editingUser.id ? {\n            ...u,\n            full_name: formData.full_name,\n            position: formData.position,\n            department: formData.department,\n            role: formData.role,\n            updated_at: new Date().toISOString()\n          } : u);\n          setUsers(updatedUsers);\n          setToastMessage('User updated successfully (Demo)');\n        } else {\n          const newUser = {\n            id: users.length + 1,\n            username: formData.username,\n            full_name: formData.full_name,\n            position: formData.position,\n            department: formData.department,\n            role: formData.role,\n            is_admin: formData.role === 'admin',\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          };\n          setUsers([...users, newUser]);\n          setToastMessage('User created successfully (Demo)');\n        }\n      } else {\n        // Real API call\n        if (editingUser) {\n          await apiService.updateUser(editingUser.id, {\n            full_name: formData.full_name,\n            position: formData.position,\n            department: formData.department,\n            role: formData.role\n          });\n          setToastMessage('User updated successfully');\n        } else {\n          await apiService.createUser({\n            username: formData.username,\n            password: formData.password,\n            full_name: formData.full_name,\n            position: formData.position,\n            department: formData.department,\n            role: formData.role\n          });\n          setToastMessage('User created successfully');\n        }\n        fetchUsers();\n      }\n      setToastType('success');\n      setShowToast(true);\n      setShowModal(false);\n      resetForm();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Failed to save user:', error);\n      setToastMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to save user');\n      setToastType('error');\n      setShowToast(true);\n    }\n  };\n  const handleDeleteUser = async userId => {\n    if (!window.confirm('Are you sure you want to delete this user?')) {\n      return;\n    }\n    try {\n      if (usingMockData) {\n        // Simulate deletion for mock data\n        setUsers(users.filter(u => u.id !== userId));\n        setToastMessage('User deleted successfully (Demo)');\n      } else {\n        await apiService.deleteUser(userId);\n        setToastMessage('User deleted successfully');\n        fetchUsers();\n      }\n      setToastType('success');\n      setShowToast(true);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Failed to delete user:', error);\n      setToastMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to delete user');\n      setToastType('error');\n      setShowToast(true);\n    }\n  };\n  const resetForm = () => {\n    setFormData({\n      username: '',\n      password: '',\n      full_name: '',\n      position: '',\n      department: '',\n      role: 'procurement'\n    });\n    setErrors({});\n    setEditingUser(null);\n  };\n  const handleShowModal = () => {\n    resetForm();\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    resetForm();\n  };\n  const startEditUser = user => {\n    setEditingUser(user);\n    setFormData({\n      username: user.username,\n      password: '',\n      full_name: user.full_name,\n      position: user.position,\n      department: user.department,\n      role: user.role\n    });\n    setShowModal(true);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'numeric',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n  const filteredUsers = users.filter(user => user.username.toLowerCase().includes(searchTerm.toLowerCase()) || user.full_name.toLowerCase().includes(searchTerm.toLowerCase()) || user.role.toLowerCase().includes(searchTerm.toLowerCase()));\n  if (!(user !== null && user !== void 0 && user.is_admin)) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\",\n        text: \"Checking permissions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\",\n        text: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h2 mb-1\",\n              children: \"User Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-0\",\n              children: [\"Manage system users and their roles\", usingMockData && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2 badge bg-warning text-dark\",\n                children: \"Demo Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleShowModal,\n            \"aria-label\": \"Add new user\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-plus-circle me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), \"Add User\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search users...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            \"aria-label\": \"Search users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [\"Users (\", filteredUsers.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            className: \"mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: user.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.full_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.department\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: user.role === 'admin' ? 'danger' : user.role === 'procurement' ? 'primary' : user.role === 'validator' ? 'warning' : user.role === 'supplier' ? 'info' : user.role === 'auditor' ? 'secondary' : user.role === 'finance' ? 'success' : 'secondary',\n                    children: user.role\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.is_admin ? /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: \"success\",\n                    children: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: \"secondary\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(user.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex gap-1\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-primary\",\n                      size: \"sm\",\n                      onClick: () => startEditUser(user),\n                      \"aria-label\": `Edit ${user.username}`,\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-pencil\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 25\n                    }, this), user.id !== 1 &&\n                    /*#__PURE__*/\n                    // Prevent deleting the main admin\n                    _jsxDEV(Button, {\n                      variant: \"outline-danger\",\n                      size: \"sm\",\n                      onClick: () => handleDeleteUser(user.id),\n                      \"aria-label\": `Delete ${user.username}`,\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-trash\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 21\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingUser ? 'Edit User' : 'Create New User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"g-3\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"username\",\n                  children: \"Username *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"username\",\n                  type: \"text\",\n                  value: formData.username,\n                  onChange: e => setFormData({\n                    ...formData,\n                    username: e.target.value\n                  }),\n                  isInvalid: !!errors.username,\n                  disabled: !!editingUser,\n                  \"aria-describedby\": \"usernameError\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  id: \"usernameError\",\n                  children: errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"password\",\n                  children: \"Password *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"password\",\n                  type: \"password\",\n                  value: formData.password,\n                  onChange: e => setFormData({\n                    ...formData,\n                    password: e.target.value\n                  }),\n                  isInvalid: !!errors.password,\n                  placeholder: editingUser ? 'Leave blank to keep current' : '',\n                  \"aria-describedby\": \"passwordError\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  id: \"passwordError\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"full_name\",\n                  children: \"Full Name *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"full_name\",\n                  type: \"text\",\n                  value: formData.full_name,\n                  onChange: e => setFormData({\n                    ...formData,\n                    full_name: e.target.value\n                  }),\n                  isInvalid: !!errors.full_name,\n                  \"aria-describedby\": \"fullNameError\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  id: \"fullNameError\",\n                  children: errors.full_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"position\",\n                  children: \"Position *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"position\",\n                  type: \"text\",\n                  value: formData.position,\n                  onChange: e => setFormData({\n                    ...formData,\n                    position: e.target.value\n                  }),\n                  isInvalid: !!errors.position,\n                  \"aria-describedby\": \"positionError\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  id: \"positionError\",\n                  children: errors.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"department\",\n                  children: \"Department *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"department\",\n                  type: \"text\",\n                  value: formData.department,\n                  onChange: e => setFormData({\n                    ...formData,\n                    department: e.target.value\n                  }),\n                  isInvalid: !!errors.department,\n                  \"aria-describedby\": \"departmentError\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  id: \"departmentError\",\n                  children: errors.department\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"role\",\n                  children: \"Role *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  id: \"role\",\n                  value: formData.role,\n                  onChange: e => setFormData({\n                    ...formData,\n                    role: e.target.value\n                  }),\n                  isInvalid: !!errors.role,\n                  \"aria-describedby\": \"roleError\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 21\n                  }, this), mockRoles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: role,\n                    children: role.charAt(0).toUpperCase() + role.slice(1)\n                  }, role, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  id: \"roleError\",\n                  children: errors.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 19\n                }, this), roleDescriptions[formData.role] && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: roleDescriptions[formData.role]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: editingUser ? 'Update User' : 'Create User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      show: showToast,\n      message: toastMessage,\n      type: toastType,\n      onClose: () => setShowToast(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"SfiGgLNfec9Tgg+9o1joe1ae6Ro=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Row","Col","Card","Table","Button","Badge","Form","Modal","InputGroup","apiService","useAuth","LoadingSpinner","Toast","jsxDEV","_jsxDEV","mockUsers","id","username","full_name","position","department","role","is_admin","created_at","updated_at","mockRoles","roleDescriptions","Users","_s","user","navigate","users","setUsers","loading","setLoading","showModal","setShowModal","editingUser","setEditingUser","usingMockData","setUsingMockData","showToast","setShowToast","toastMessage","setToastMessage","toastType","setToastType","searchTerm","setSearchTerm","formData","setFormData","password","errors","setErrors","setTimeout","fetchUsers","response","getUsers","apiError","console","log","error","validateForm","newErrors","trim","Object","keys","length","handleSubmit","e","preventDefault","updatedUsers","map","u","Date","toISOString","newUser","updateUser","createUser","resetForm","_error$response","_error$response$data","data","handleDeleteUser","userId","window","confirm","filter","deleteUser","_error$response2","_error$response2$data","handleShowModal","handleCloseModal","startEditUser","formatDate","dateString","toLocaleDateString","month","day","year","filteredUsers","toLowerCase","includes","children","size","text","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","onClick","md","Text","Control","type","placeholder","value","onChange","target","Header","Body","striped","bordered","bg","show","onHide","closeButton","Title","onSubmit","Group","Label","htmlFor","isInvalid","disabled","Feedback","Select","charAt","toUpperCase","slice","Footer","message","onClose","_c","$RefreshReg$"],"sources":["F:/Project/BLOCKCHAIN/frontend/src/pages/Users.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  Container, Row, Col, Card, Table, Button, Badge, \r\n  Form, Modal, Alert, InputGroup \r\n} from 'react-bootstrap';\r\nimport { apiService, User, CreateUserData } from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport Toast from '../components/Toast';\r\n\r\ninterface UserFormData {\r\n  username: string;\r\n  password: string;\r\n  full_name: string;\r\n  position: string;\r\n  department: string;\r\n  role: string;\r\n}\r\n\r\n// Mock data for demonstration\r\nconst mockUsers: User[] = [\r\n  {\r\n    id: 1,\r\n    username: \"admin\",\r\n    full_name: \"System Administrator\",\r\n    position: \"System Administrator\",\r\n    department: \"IT Department\",\r\n    role: \"admin\",\r\n    is_admin: true,\r\n    created_at: \"2024-01-01T00:00:00Z\",\r\n    updated_at: \"2024-01-01T00:00:00Z\"\r\n  },\r\n  {\r\n    id: 2,\r\n    username: \"procurement0\",\r\n    full_name: \"Juan Dela Cruz\",\r\n    position: \"Procurement Officer\",\r\n    department: \"Procurement Department\",\r\n    role: \"procurement\",\r\n    is_admin: false,\r\n    created_at: \"2025-08-15T10:30:00Z\",\r\n    updated_at: \"2025-08-15T10:30:00Z\"\r\n  },\r\n  {\r\n    id: 3,\r\n    username: \"procurement1\",\r\n    full_name: \"Maria Santos\",\r\n    position: \"Senior Procurement Officer\",\r\n    department: \"Procurement Department\",\r\n    role: \"procurement\",\r\n    is_admin: false,\r\n    created_at: \"2025-08-14T14:20:00Z\",\r\n    updated_at: \"2025-08-14T14:20:00Z\"\r\n  },\r\n  {\r\n    id: 4,\r\n    username: \"procurement2\",\r\n    full_name: \"Pedro Martinez\",\r\n    position: \"Procurement Specialist\",\r\n    department: \"Procurement Department\",\r\n    role: \"procurement\",\r\n    is_admin: false,\r\n    created_at: \"2025-08-13T09:15:00Z\",\r\n    updated_at: \"2025-08-13T09:15:00Z\"\r\n  },\r\n  {\r\n    id: 5,\r\n    username: \"validator1\",\r\n    full_name: \"Ana Reyes\",\r\n    position: \"Validation Officer\",\r\n    department: \"Quality Assurance\",\r\n    role: \"validator\",\r\n    is_admin: false,\r\n    created_at: \"2025-08-12T16:45:00Z\",\r\n    updated_at: \"2025-08-12T16:45:00Z\"\r\n  },\r\n  {\r\n    id: 6,\r\n    username: \"finance1\",\r\n    full_name: \"Carlos Lopez\",\r\n    position: \"Finance Manager\",\r\n    department: \"Finance Department\",\r\n    role: \"finance\",\r\n    is_admin: false,\r\n    created_at: \"2025-08-11T11:30:00Z\",\r\n    updated_at: \"2025-08-11T11:30:00Z\"\r\n  }\r\n];\r\n\r\nconst mockRoles = [\r\n  'admin',\r\n  'procurement',\r\n  'validator',\r\n  'supplier',\r\n  'auditor',\r\n  'finance'\r\n];\r\n\r\nconst roleDescriptions: Record<string, string> = {\r\n  'admin': 'Full system access and user management',\r\n  'procurement': 'Create and manage purchase orders',\r\n  'validator': 'Approve and validate transactions',\r\n  'supplier': 'View and manage supplier information',\r\n  'auditor': 'Access audit logs and reports',\r\n  'finance': 'Financial reporting and analysis'\r\n};\r\n\r\nconst Users: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingUser, setEditingUser] = useState<User | null>(null);\r\n  const [usingMockData, setUsingMockData] = useState(false);\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState('');\r\n  const [toastType, setToastType] = useState<'success' | 'error' | 'warning' | 'info'>('info');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const [formData, setFormData] = useState<UserFormData>({\r\n    username: '',\r\n    password: '',\r\n    full_name: '',\r\n    position: '',\r\n    department: '',\r\n    role: 'procurement'\r\n  });\r\n\r\n  const [errors, setErrors] = useState<{\r\n    username?: string;\r\n    password?: string;\r\n    full_name?: string;\r\n    position?: string;\r\n    department?: string;\r\n    role?: string;\r\n  }>({});\r\n\r\n  // Check if user is admin\r\n  useEffect(() => {\r\n    if (user && !user.is_admin) {\r\n      setToastMessage('Access denied. Admin privileges required.');\r\n      setToastType('error');\r\n      setShowToast(true);\r\n      setTimeout(() => navigate('/dashboard'), 2000);\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  // Load users\r\n  useEffect(() => {\r\n    if (user?.is_admin) {\r\n      fetchUsers();\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Try to fetch from API first\r\n      try {\r\n        const response = await apiService.getUsers();\r\n        setUsers(response);\r\n        setUsingMockData(false);\r\n      } catch (apiError) {\r\n        console.log('API not available, using mock data...');\r\n        // Use mock data if API fails\r\n        setUsers(mockUsers);\r\n        setUsingMockData(true);\r\n        \r\n        // Show warning toast\r\n        setToastMessage('Using demo data - backend not available');\r\n        setToastType('warning');\r\n        setShowToast(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load users:', error);\r\n      // Fallback to mock data\r\n      setUsers(mockUsers);\r\n      setUsingMockData(true);\r\n      \r\n      setToastMessage('Failed to load users, using demo data');\r\n      setToastType('warning');\r\n      setShowToast(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: {\r\n      username?: string;\r\n      password?: string;\r\n      full_name?: string;\r\n      position?: string;\r\n      department?: string;\r\n      role?: string;\r\n    } = {};\r\n\r\n    if (!formData.username.trim()) {\r\n      newErrors.username = 'Username is required';\r\n    }\r\n\r\n    if (!editingUser && !formData.password.trim()) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n\r\n    if (!formData.full_name.trim()) {\r\n      newErrors.full_name = 'Full name is required';\r\n    }\r\n\r\n    if (!formData.position.trim()) {\r\n      newErrors.position = 'Position is required';\r\n    }\r\n\r\n    if (!formData.department.trim()) {\r\n      newErrors.department = 'Department is required';\r\n    }\r\n\r\n    if (!formData.role) {\r\n      newErrors.role = 'Role is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      if (usingMockData) {\r\n        // Simulate API call for mock data\r\n        if (editingUser) {\r\n          const updatedUsers = users.map(u => \r\n            u.id === editingUser.id \r\n              ? { \r\n                  ...u, \r\n                  full_name: formData.full_name,\r\n                  position: formData.position,\r\n                  department: formData.department,\r\n                  role: formData.role,\r\n                  updated_at: new Date().toISOString()\r\n                }\r\n              : u\r\n          );\r\n          setUsers(updatedUsers);\r\n          setToastMessage('User updated successfully (Demo)');\r\n        } else {\r\n          const newUser: User = {\r\n            id: users.length + 1,\r\n            username: formData.username,\r\n            full_name: formData.full_name,\r\n            position: formData.position,\r\n            department: formData.department,\r\n            role: formData.role,\r\n            is_admin: formData.role === 'admin',\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString()\r\n          };\r\n          setUsers([...users, newUser]);\r\n          setToastMessage('User created successfully (Demo)');\r\n        }\r\n      } else {\r\n        // Real API call\r\n        if (editingUser) {\r\n          await apiService.updateUser(editingUser.id, {\r\n            full_name: formData.full_name,\r\n            position: formData.position,\r\n            department: formData.department,\r\n            role: formData.role\r\n          });\r\n          setToastMessage('User updated successfully');\r\n        } else {\r\n          await apiService.createUser({\r\n            username: formData.username,\r\n            password: formData.password,\r\n            full_name: formData.full_name,\r\n            position: formData.position,\r\n            department: formData.department,\r\n            role: formData.role\r\n          });\r\n          setToastMessage('User created successfully');\r\n        }\r\n        fetchUsers();\r\n      }\r\n      \r\n      setToastType('success');\r\n      setShowToast(true);\r\n      setShowModal(false);\r\n      resetForm();\r\n    } catch (error: any) {\r\n      console.error('Failed to save user:', error);\r\n      setToastMessage(error.response?.data?.error || 'Failed to save user');\r\n      setToastType('error');\r\n      setShowToast(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (userId: number) => {\r\n    if (!window.confirm('Are you sure you want to delete this user?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (usingMockData) {\r\n        // Simulate deletion for mock data\r\n        setUsers(users.filter(u => u.id !== userId));\r\n        setToastMessage('User deleted successfully (Demo)');\r\n      } else {\r\n        await apiService.deleteUser(userId);\r\n        setToastMessage('User deleted successfully');\r\n        fetchUsers();\r\n      }\r\n      setToastType('success');\r\n      setShowToast(true);\r\n    } catch (error: any) {\r\n      console.error('Failed to delete user:', error);\r\n      setToastMessage(error.response?.data?.error || 'Failed to delete user');\r\n      setToastType('error');\r\n      setShowToast(true);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      username: '',\r\n      password: '',\r\n      full_name: '',\r\n      position: '',\r\n      department: '',\r\n      role: 'procurement'\r\n    });\r\n    setErrors({});\r\n    setEditingUser(null);\r\n  };\r\n\r\n  const handleShowModal = () => {\r\n    resetForm();\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    resetForm();\r\n  };\r\n\r\n  const startEditUser = (user: User) => {\r\n    setEditingUser(user);\r\n    setFormData({\r\n      username: user.username,\r\n      password: '',\r\n      full_name: user.full_name,\r\n      position: user.position,\r\n      department: user.department,\r\n      role: user.role\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const filteredUsers = users.filter(user =>\r\n    user.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.full_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  if (!user?.is_admin) {\r\n    return (\r\n      <Container>\r\n        <LoadingSpinner size=\"lg\" text=\"Checking permissions...\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <LoadingSpinner size=\"lg\" text=\"Loading users...\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {/* Header */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h1 className=\"h2 mb-1\">User Management</h1>\r\n              <p className=\"text-muted mb-0\">\r\n                Manage system users and their roles\r\n                {usingMockData && (\r\n                  <span className=\"ms-2 badge bg-warning text-dark\">Demo Mode</span>\r\n                )}\r\n              </p>\r\n            </div>\r\n            <Button \r\n              variant=\"primary\" \r\n              onClick={handleShowModal}\r\n              aria-label=\"Add new user\"\r\n            >\r\n              <i className=\"bi bi-plus-circle me-2\"></i>\r\n              Add User\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Search */}\r\n      <Row className=\"mb-4\">\r\n        <Col md={6}>\r\n          <InputGroup>\r\n            <InputGroup.Text>\r\n              <i className=\"bi bi-search\"></i>\r\n            </InputGroup.Text>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Search users...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              aria-label=\"Search users\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Users Table */}\r\n      <Card>\r\n        <Card.Header>\r\n          <h5 className=\"mb-0\">Users ({filteredUsers.length})</h5>\r\n        </Card.Header>\r\n        <Card.Body className=\"p-0\">\r\n          <div className=\"table-responsive\">\r\n            <Table striped bordered className=\"mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Full Name</th>\r\n                  <th>Position</th>\r\n                  <th>Department</th>\r\n                  <th>Role</th>\r\n                  <th>Admin</th>\r\n                  <th>Created</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredUsers.map((user) => (\r\n                  <tr key={user.id}>\r\n                    <td>\r\n                      <strong>{user.username}</strong>\r\n                    </td>\r\n                    <td>{user.full_name}</td>\r\n                    <td>{user.position}</td>\r\n                    <td>{user.department}</td>\r\n                    <td>\r\n                      <Badge bg={\r\n                        user.role === 'admin' ? 'danger' :\r\n                        user.role === 'procurement' ? 'primary' :\r\n                        user.role === 'validator' ? 'warning' :\r\n                        user.role === 'supplier' ? 'info' :\r\n                        user.role === 'auditor' ? 'secondary' :\r\n                        user.role === 'finance' ? 'success' : 'secondary'\r\n                      }>\r\n                        {user.role}\r\n                      </Badge>\r\n                    </td>\r\n                    <td>\r\n                      {user.is_admin ? (\r\n                        <Badge bg=\"success\">Yes</Badge>\r\n                      ) : (\r\n                        <Badge bg=\"secondary\">No</Badge>\r\n                      )}\r\n                    </td>\r\n                    <td>{formatDate(user.created_at)}</td>\r\n                    <td>\r\n                      <div className=\"d-flex gap-1\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          size=\"sm\"\r\n                          onClick={() => startEditUser(user)}\r\n                          aria-label={`Edit ${user.username}`}\r\n                        >\r\n                          <i className=\"bi bi-pencil\"></i>\r\n                        </Button>\r\n                        {user.id !== 1 && ( // Prevent deleting the main admin\r\n                          <Button\r\n                            variant=\"outline-danger\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleDeleteUser(user.id)}\r\n                            aria-label={`Delete ${user.username}`}\r\n                          >\r\n                            <i className=\"bi bi-trash\"></i>\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* User Modal */}\r\n      <Modal show={showModal} onHide={handleCloseModal} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {editingUser ? 'Edit User' : 'Create New User'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            <Row className=\"g-3\">\r\n              <Col md={6}>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor=\"username\">Username *</Form.Label>\r\n                  <Form.Control\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    value={formData.username}\r\n                    onChange={(e) => setFormData({ ...formData, username: e.target.value })}\r\n                    isInvalid={!!errors.username}\r\n                    disabled={!!editingUser}\r\n                    aria-describedby=\"usernameError\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\" id=\"usernameError\">\r\n                    {errors.username}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor=\"password\">Password *</Form.Label>\r\n                  <Form.Control\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    value={formData.password}\r\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n                    isInvalid={!!errors.password}\r\n                    placeholder={editingUser ? 'Leave blank to keep current' : ''}\r\n                    aria-describedby=\"passwordError\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\" id=\"passwordError\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor=\"full_name\">Full Name *</Form.Label>\r\n                  <Form.Control\r\n                    id=\"full_name\"\r\n                    type=\"text\"\r\n                    value={formData.full_name}\r\n                    onChange={(e) => setFormData({ ...formData, full_name: e.target.value })}\r\n                    isInvalid={!!errors.full_name}\r\n                    aria-describedby=\"fullNameError\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\" id=\"fullNameError\">\r\n                    {errors.full_name}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor=\"position\">Position *</Form.Label>\r\n                  <Form.Control\r\n                    id=\"position\"\r\n                    type=\"text\"\r\n                    value={formData.position}\r\n                    onChange={(e) => setFormData({ ...formData, position: e.target.value })}\r\n                    isInvalid={!!errors.position}\r\n                    aria-describedby=\"positionError\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\" id=\"positionError\">\r\n                    {errors.position}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor=\"department\">Department *</Form.Label>\r\n                  <Form.Control\r\n                    id=\"department\"\r\n                    type=\"text\"\r\n                    value={formData.department}\r\n                    onChange={(e) => setFormData({ ...formData, department: e.target.value })}\r\n                    isInvalid={!!errors.department}\r\n                    aria-describedby=\"departmentError\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\" id=\"departmentError\">\r\n                    {errors.department}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor=\"role\">Role *</Form.Label>\r\n                  <Form.Select\r\n                    id=\"role\"\r\n                    value={formData.role}\r\n                    onChange={(e) => setFormData({ ...formData, role: e.target.value })}\r\n                    isInvalid={!!errors.role}\r\n                    aria-describedby=\"roleError\"\r\n                  >\r\n                    <option value=\"\">Select Role</option>\r\n                    {mockRoles.map(role => (\r\n                      <option key={role} value={role}>\r\n                        {role.charAt(0).toUpperCase() + role.slice(1)}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                  <Form.Control.Feedback type=\"invalid\" id=\"roleError\">\r\n                    {errors.role}\r\n                  </Form.Control.Feedback>\r\n                  {roleDescriptions[formData.role] && (\r\n                    <Form.Text className=\"text-muted\">\r\n                      {roleDescriptions[formData.role]}\r\n                    </Form.Text>\r\n                  )}\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              {editingUser ? 'Update User' : 'Create User'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {/* Toast Notification */}\r\n      <Toast\r\n        show={showToast}\r\n        message={toastMessage}\r\n        type={toastType}\r\n        onClose={() => setShowToast(false)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAC/CC,IAAI,EAAEC,KAAK,EAASC,UAAU,QACzB,iBAAiB;AACxB,SAASC,UAAU,QAA8B,iBAAiB;AAClE,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWxC;AACA,MAAMC,SAAiB,GAAG,CACxB;EACEC,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,OAAO;EACjBC,SAAS,EAAE,sBAAsB;EACjCC,QAAQ,EAAE,sBAAsB;EAChCC,UAAU,EAAE,eAAe;EAC3BC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,IAAI;EACdC,UAAU,EAAE,sBAAsB;EAClCC,UAAU,EAAE;AACd,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,cAAc;EACxBC,SAAS,EAAE,gBAAgB;EAC3BC,QAAQ,EAAE,qBAAqB;EAC/BC,UAAU,EAAE,wBAAwB;EACpCC,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,sBAAsB;EAClCC,UAAU,EAAE;AACd,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,cAAc;EACxBC,SAAS,EAAE,cAAc;EACzBC,QAAQ,EAAE,4BAA4B;EACtCC,UAAU,EAAE,wBAAwB;EACpCC,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,sBAAsB;EAClCC,UAAU,EAAE;AACd,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,cAAc;EACxBC,SAAS,EAAE,gBAAgB;EAC3BC,QAAQ,EAAE,wBAAwB;EAClCC,UAAU,EAAE,wBAAwB;EACpCC,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,sBAAsB;EAClCC,UAAU,EAAE;AACd,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,YAAY;EACtBC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE,oBAAoB;EAC9BC,UAAU,EAAE,mBAAmB;EAC/BC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,sBAAsB;EAClCC,UAAU,EAAE;AACd,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,cAAc;EACzBC,QAAQ,EAAE,iBAAiB;EAC3BC,UAAU,EAAE,oBAAoB;EAChCC,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,sBAAsB;EAClCC,UAAU,EAAE;AACd,CAAC,CACF;AAED,MAAMC,SAAS,GAAG,CAChB,OAAO,EACP,aAAa,EACb,WAAW,EACX,UAAU,EACV,SAAS,EACT,SAAS,CACV;AAED,MAAMC,gBAAwC,GAAG;EAC/C,OAAO,EAAE,wCAAwC;EACjD,aAAa,EAAE,mCAAmC;EAClD,WAAW,EAAE,mCAAmC;EAChD,UAAU,EAAE,sCAAsC;EAClD,SAAS,EAAE,+BAA+B;EAC1C,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAK,CAAC,GAAGnB,OAAO,CAAC,CAAC;EAC1B,MAAMoB,QAAQ,GAAGhC,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACqC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAc,IAAI,CAAC;EACjE,MAAM,CAAC2C,aAAa,EAAEC,gBAAgB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC6C,SAAS,EAAEC,YAAY,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiD,SAAS,EAAEC,YAAY,CAAC,GAAGlD,QAAQ,CAA2C,MAAM,CAAC;EAC5F,MAAM,CAACmD,UAAU,EAAEC,aAAa,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM,CAACqD,QAAQ,EAAEC,WAAW,CAAC,GAAGtD,QAAQ,CAAe;IACrDqB,QAAQ,EAAE,EAAE;IACZkC,QAAQ,EAAE,EAAE;IACZjC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGzD,QAAQ,CAOjC,CAAC,CAAC,CAAC;;EAEN;EACAC,SAAS,CAAC,MAAM;IACd,IAAIgC,IAAI,IAAI,CAACA,IAAI,CAACP,QAAQ,EAAE;MAC1BsB,eAAe,CAAC,2CAA2C,CAAC;MAC5DE,YAAY,CAAC,OAAO,CAAC;MACrBJ,YAAY,CAAC,IAAI,CAAC;MAClBY,UAAU,CAAC,MAAMxB,QAAQ,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC;IAChD;EACF,CAAC,EAAE,CAACD,IAAI,EAAEC,QAAQ,CAAC,CAAC;;EAEpB;EACAjC,SAAS,CAAC,MAAM;IACd,IAAIgC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEP,QAAQ,EAAE;MAClBiC,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAAC1B,IAAI,CAAC,CAAC;EAEV,MAAM0B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFrB,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,IAAI;QACF,MAAMsB,QAAQ,GAAG,MAAM/C,UAAU,CAACgD,QAAQ,CAAC,CAAC;QAC5CzB,QAAQ,CAACwB,QAAQ,CAAC;QAClBhB,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,CAAC,OAAOkB,QAAQ,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACpD;QACA5B,QAAQ,CAACjB,SAAS,CAAC;QACnByB,gBAAgB,CAAC,IAAI,CAAC;;QAEtB;QACAI,eAAe,CAAC,yCAAyC,CAAC;QAC1DE,YAAY,CAAC,SAAS,CAAC;QACvBJ,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;MACA7B,QAAQ,CAACjB,SAAS,CAAC;MACnByB,gBAAgB,CAAC,IAAI,CAAC;MAEtBI,eAAe,CAAC,uCAAuC,CAAC;MACxDE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4B,YAAY,GAAGA,CAAA,KAAe;IAClC,MAAMC,SAOL,GAAG,CAAC,CAAC;IAEN,IAAI,CAACd,QAAQ,CAAChC,QAAQ,CAAC+C,IAAI,CAAC,CAAC,EAAE;MAC7BD,SAAS,CAAC9C,QAAQ,GAAG,sBAAsB;IAC7C;IAEA,IAAI,CAACoB,WAAW,IAAI,CAACY,QAAQ,CAACE,QAAQ,CAACa,IAAI,CAAC,CAAC,EAAE;MAC7CD,SAAS,CAACZ,QAAQ,GAAG,sBAAsB;IAC7C;IAEA,IAAI,CAACF,QAAQ,CAAC/B,SAAS,CAAC8C,IAAI,CAAC,CAAC,EAAE;MAC9BD,SAAS,CAAC7C,SAAS,GAAG,uBAAuB;IAC/C;IAEA,IAAI,CAAC+B,QAAQ,CAAC9B,QAAQ,CAAC6C,IAAI,CAAC,CAAC,EAAE;MAC7BD,SAAS,CAAC5C,QAAQ,GAAG,sBAAsB;IAC7C;IAEA,IAAI,CAAC8B,QAAQ,CAAC7B,UAAU,CAAC4C,IAAI,CAAC,CAAC,EAAE;MAC/BD,SAAS,CAAC3C,UAAU,GAAG,wBAAwB;IACjD;IAEA,IAAI,CAAC6B,QAAQ,CAAC5B,IAAI,EAAE;MAClB0C,SAAS,CAAC1C,IAAI,GAAG,kBAAkB;IACrC;IAEAgC,SAAS,CAACU,SAAS,CAAC;IACpB,OAAOE,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,MAAM,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACR,YAAY,CAAC,CAAC,EAAE;IAErB,IAAI;MACF,IAAIvB,aAAa,EAAE;QACjB;QACA,IAAIF,WAAW,EAAE;UACf,MAAMkC,YAAY,GAAGxC,KAAK,CAACyC,GAAG,CAACC,CAAC,IAC9BA,CAAC,CAACzD,EAAE,KAAKqB,WAAW,CAACrB,EAAE,GACnB;YACE,GAAGyD,CAAC;YACJvD,SAAS,EAAE+B,QAAQ,CAAC/B,SAAS;YAC7BC,QAAQ,EAAE8B,QAAQ,CAAC9B,QAAQ;YAC3BC,UAAU,EAAE6B,QAAQ,CAAC7B,UAAU;YAC/BC,IAAI,EAAE4B,QAAQ,CAAC5B,IAAI;YACnBG,UAAU,EAAE,IAAIkD,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UACrC,CAAC,GACDF,CACN,CAAC;UACDzC,QAAQ,CAACuC,YAAY,CAAC;UACtB3B,eAAe,CAAC,kCAAkC,CAAC;QACrD,CAAC,MAAM;UACL,MAAMgC,OAAa,GAAG;YACpB5D,EAAE,EAAEe,KAAK,CAACoC,MAAM,GAAG,CAAC;YACpBlD,QAAQ,EAAEgC,QAAQ,CAAChC,QAAQ;YAC3BC,SAAS,EAAE+B,QAAQ,CAAC/B,SAAS;YAC7BC,QAAQ,EAAE8B,QAAQ,CAAC9B,QAAQ;YAC3BC,UAAU,EAAE6B,QAAQ,CAAC7B,UAAU;YAC/BC,IAAI,EAAE4B,QAAQ,CAAC5B,IAAI;YACnBC,QAAQ,EAAE2B,QAAQ,CAAC5B,IAAI,KAAK,OAAO;YACnCE,UAAU,EAAE,IAAImD,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;YACpCnD,UAAU,EAAE,IAAIkD,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UACrC,CAAC;UACD3C,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE6C,OAAO,CAAC,CAAC;UAC7BhC,eAAe,CAAC,kCAAkC,CAAC;QACrD;MACF,CAAC,MAAM;QACL;QACA,IAAIP,WAAW,EAAE;UACf,MAAM5B,UAAU,CAACoE,UAAU,CAACxC,WAAW,CAACrB,EAAE,EAAE;YAC1CE,SAAS,EAAE+B,QAAQ,CAAC/B,SAAS;YAC7BC,QAAQ,EAAE8B,QAAQ,CAAC9B,QAAQ;YAC3BC,UAAU,EAAE6B,QAAQ,CAAC7B,UAAU;YAC/BC,IAAI,EAAE4B,QAAQ,CAAC5B;UACjB,CAAC,CAAC;UACFuB,eAAe,CAAC,2BAA2B,CAAC;QAC9C,CAAC,MAAM;UACL,MAAMnC,UAAU,CAACqE,UAAU,CAAC;YAC1B7D,QAAQ,EAAEgC,QAAQ,CAAChC,QAAQ;YAC3BkC,QAAQ,EAAEF,QAAQ,CAACE,QAAQ;YAC3BjC,SAAS,EAAE+B,QAAQ,CAAC/B,SAAS;YAC7BC,QAAQ,EAAE8B,QAAQ,CAAC9B,QAAQ;YAC3BC,UAAU,EAAE6B,QAAQ,CAAC7B,UAAU;YAC/BC,IAAI,EAAE4B,QAAQ,CAAC5B;UACjB,CAAC,CAAC;UACFuB,eAAe,CAAC,2BAA2B,CAAC;QAC9C;QACAW,UAAU,CAAC,CAAC;MACd;MAEAT,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClBN,YAAY,CAAC,KAAK,CAAC;MACnB2C,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOlB,KAAU,EAAE;MAAA,IAAAmB,eAAA,EAAAC,oBAAA;MACnBtB,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CjB,eAAe,CAAC,EAAAoC,eAAA,GAAAnB,KAAK,CAACL,QAAQ,cAAAwB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBE,IAAI,cAAAD,oBAAA,uBAApBA,oBAAA,CAAsBpB,KAAK,KAAI,qBAAqB,CAAC;MACrEf,YAAY,CAAC,OAAO,CAAC;MACrBJ,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMyC,gBAAgB,GAAG,MAAOC,MAAc,IAAK;IACjD,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MACjE;IACF;IAEA,IAAI;MACF,IAAI/C,aAAa,EAAE;QACjB;QACAP,QAAQ,CAACD,KAAK,CAACwD,MAAM,CAACd,CAAC,IAAIA,CAAC,CAACzD,EAAE,KAAKoE,MAAM,CAAC,CAAC;QAC5CxC,eAAe,CAAC,kCAAkC,CAAC;MACrD,CAAC,MAAM;QACL,MAAMnC,UAAU,CAAC+E,UAAU,CAACJ,MAAM,CAAC;QACnCxC,eAAe,CAAC,2BAA2B,CAAC;QAC5CW,UAAU,CAAC,CAAC;MACd;MACAT,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOmB,KAAU,EAAE;MAAA,IAAA4B,gBAAA,EAAAC,qBAAA;MACnB/B,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CjB,eAAe,CAAC,EAAA6C,gBAAA,GAAA5B,KAAK,CAACL,QAAQ,cAAAiC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsB7B,KAAK,KAAI,uBAAuB,CAAC;MACvEf,YAAY,CAAC,OAAO,CAAC;MACrBJ,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMqC,SAAS,GAAGA,CAAA,KAAM;IACtB7B,WAAW,CAAC;MACVjC,QAAQ,EAAE,EAAE;MACZkC,QAAQ,EAAE,EAAE;MACZjC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;IACFgC,SAAS,CAAC,CAAC,CAAC,CAAC;IACbf,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMqD,eAAe,GAAGA,CAAA,KAAM;IAC5BZ,SAAS,CAAC,CAAC;IACX3C,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMwD,gBAAgB,GAAGA,CAAA,KAAM;IAC7BxD,YAAY,CAAC,KAAK,CAAC;IACnB2C,SAAS,CAAC,CAAC;EACb,CAAC;EAED,MAAMc,aAAa,GAAIhE,IAAU,IAAK;IACpCS,cAAc,CAACT,IAAI,CAAC;IACpBqB,WAAW,CAAC;MACVjC,QAAQ,EAAEY,IAAI,CAACZ,QAAQ;MACvBkC,QAAQ,EAAE,EAAE;MACZjC,SAAS,EAAEW,IAAI,CAACX,SAAS;MACzBC,QAAQ,EAAEU,IAAI,CAACV,QAAQ;MACvBC,UAAU,EAAES,IAAI,CAACT,UAAU;MAC3BC,IAAI,EAAEQ,IAAI,CAACR;IACb,CAAC,CAAC;IACFe,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM0D,UAAU,GAAIC,UAAkB,IAAa;IACjD,OAAO,IAAIrB,IAAI,CAACqB,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACtDC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGrE,KAAK,CAACwD,MAAM,CAAC1D,IAAI,IACrCA,IAAI,CAACZ,QAAQ,CAACoF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACvD,UAAU,CAACsD,WAAW,CAAC,CAAC,CAAC,IAC9DxE,IAAI,CAACX,SAAS,CAACmF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACvD,UAAU,CAACsD,WAAW,CAAC,CAAC,CAAC,IAC/DxE,IAAI,CAACR,IAAI,CAACgF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACvD,UAAU,CAACsD,WAAW,CAAC,CAAC,CAC3D,CAAC;EAED,IAAI,EAACxE,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEP,QAAQ,GAAE;IACnB,oBACER,OAAA,CAACf,SAAS;MAAAwG,QAAA,eACRzF,OAAA,CAACH,cAAc;QAAC6F,IAAI,EAAC,IAAI;QAACC,IAAI,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEhB;EAEA,IAAI5E,OAAO,EAAE;IACX,oBACEnB,OAAA,CAACf,SAAS;MAAAwG,QAAA,eACRzF,OAAA,CAACH,cAAc;QAAC6F,IAAI,EAAC,IAAI;QAACC,IAAI,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAEhB;EAEA,oBACE/F,OAAA,CAACf,SAAS;IAAAwG,QAAA,gBAERzF,OAAA,CAACd,GAAG;MAAC8G,SAAS,EAAC,MAAM;MAAAP,QAAA,eACnBzF,OAAA,CAACb,GAAG;QAAAsG,QAAA,eACFzF,OAAA;UAAKgG,SAAS,EAAC,mDAAmD;UAAAP,QAAA,gBAChEzF,OAAA;YAAAyF,QAAA,gBACEzF,OAAA;cAAIgG,SAAS,EAAC,SAAS;cAAAP,QAAA,EAAC;YAAe;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5C/F,OAAA;cAAGgG,SAAS,EAAC,iBAAiB;cAAAP,QAAA,GAAC,qCAE7B,EAAChE,aAAa,iBACZzB,OAAA;gBAAMgG,SAAS,EAAC,iCAAiC;gBAAAP,QAAA,EAAC;cAAS;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAClE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN/F,OAAA,CAACV,MAAM;YACL2G,OAAO,EAAC,SAAS;YACjBC,OAAO,EAAErB,eAAgB;YACzB,cAAW,cAAc;YAAAY,QAAA,gBAEzBzF,OAAA;cAAGgG,SAAS,EAAC;YAAwB;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,YAE5C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN/F,OAAA,CAACd,GAAG;MAAC8G,SAAS,EAAC,MAAM;MAAAP,QAAA,eACnBzF,OAAA,CAACb,GAAG;QAACgH,EAAE,EAAE,CAAE;QAAAV,QAAA,eACTzF,OAAA,CAACN,UAAU;UAAA+F,QAAA,gBACTzF,OAAA,CAACN,UAAU,CAAC0G,IAAI;YAAAX,QAAA,eACdzF,OAAA;cAAGgG,SAAS,EAAC;YAAc;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eAClB/F,OAAA,CAACR,IAAI,CAAC6G,OAAO;YACXC,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,iBAAiB;YAC7BC,KAAK,EAAEvE,UAAW;YAClBwE,QAAQ,EAAGlD,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACmD,MAAM,CAACF,KAAK,CAAE;YAC/C,cAAW;UAAc;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN/F,OAAA,CAACZ,IAAI;MAAAqG,QAAA,gBACHzF,OAAA,CAACZ,IAAI,CAACuH,MAAM;QAAAlB,QAAA,eACVzF,OAAA;UAAIgG,SAAS,EAAC,MAAM;UAAAP,QAAA,GAAC,SAAO,EAACH,aAAa,CAACjC,MAAM,EAAC,GAAC;QAAA;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACd/F,OAAA,CAACZ,IAAI,CAACwH,IAAI;QAACZ,SAAS,EAAC,KAAK;QAAAP,QAAA,eACxBzF,OAAA;UAAKgG,SAAS,EAAC,kBAAkB;UAAAP,QAAA,eAC/BzF,OAAA,CAACX,KAAK;YAACwH,OAAO;YAACC,QAAQ;YAACd,SAAS,EAAC,MAAM;YAAAP,QAAA,gBACtCzF,OAAA;cAAAyF,QAAA,eACEzF,OAAA;gBAAAyF,QAAA,gBACEzF,OAAA;kBAAAyF,QAAA,EAAI;gBAAQ;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjB/F,OAAA;kBAAAyF,QAAA,EAAI;gBAAS;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClB/F,OAAA;kBAAAyF,QAAA,EAAI;gBAAQ;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjB/F,OAAA;kBAAAyF,QAAA,EAAI;gBAAU;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnB/F,OAAA;kBAAAyF,QAAA,EAAI;gBAAI;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACb/F,OAAA;kBAAAyF,QAAA,EAAI;gBAAK;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACd/F,OAAA;kBAAAyF,QAAA,EAAI;gBAAO;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAChB/F,OAAA;kBAAAyF,QAAA,EAAI;gBAAO;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACR/F,OAAA;cAAAyF,QAAA,EACGH,aAAa,CAAC5B,GAAG,CAAE3C,IAAI,iBACtBf,OAAA;gBAAAyF,QAAA,gBACEzF,OAAA;kBAAAyF,QAAA,eACEzF,OAAA;oBAAAyF,QAAA,EAAS1E,IAAI,CAACZ;kBAAQ;oBAAAyF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B,CAAC,eACL/F,OAAA;kBAAAyF,QAAA,EAAK1E,IAAI,CAACX;gBAAS;kBAAAwF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACzB/F,OAAA;kBAAAyF,QAAA,EAAK1E,IAAI,CAACV;gBAAQ;kBAAAuF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACxB/F,OAAA;kBAAAyF,QAAA,EAAK1E,IAAI,CAACT;gBAAU;kBAAAsF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1B/F,OAAA;kBAAAyF,QAAA,eACEzF,OAAA,CAACT,KAAK;oBAACwH,EAAE,EACPhG,IAAI,CAACR,IAAI,KAAK,OAAO,GAAG,QAAQ,GAChCQ,IAAI,CAACR,IAAI,KAAK,aAAa,GAAG,SAAS,GACvCQ,IAAI,CAACR,IAAI,KAAK,WAAW,GAAG,SAAS,GACrCQ,IAAI,CAACR,IAAI,KAAK,UAAU,GAAG,MAAM,GACjCQ,IAAI,CAACR,IAAI,KAAK,SAAS,GAAG,WAAW,GACrCQ,IAAI,CAACR,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG,WACvC;oBAAAkF,QAAA,EACE1E,IAAI,CAACR;kBAAI;oBAAAqF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC,eACL/F,OAAA;kBAAAyF,QAAA,EACG1E,IAAI,CAACP,QAAQ,gBACZR,OAAA,CAACT,KAAK;oBAACwH,EAAE,EAAC,SAAS;oBAAAtB,QAAA,EAAC;kBAAG;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,gBAE/B/F,OAAA,CAACT,KAAK;oBAACwH,EAAE,EAAC,WAAW;oBAAAtB,QAAA,EAAC;kBAAE;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO;gBAChC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACL/F,OAAA;kBAAAyF,QAAA,EAAKT,UAAU,CAACjE,IAAI,CAACN,UAAU;gBAAC;kBAAAmF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtC/F,OAAA;kBAAAyF,QAAA,eACEzF,OAAA;oBAAKgG,SAAS,EAAC,cAAc;oBAAAP,QAAA,gBAC3BzF,OAAA,CAACV,MAAM;sBACL2G,OAAO,EAAC,iBAAiB;sBACzBP,IAAI,EAAC,IAAI;sBACTQ,OAAO,EAAEA,CAAA,KAAMnB,aAAa,CAAChE,IAAI,CAAE;sBACnC,cAAY,QAAQA,IAAI,CAACZ,QAAQ,EAAG;sBAAAsF,QAAA,eAEpCzF,OAAA;wBAAGgG,SAAS,EAAC;sBAAc;wBAAAJ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC1B,CAAC,EACRhF,IAAI,CAACb,EAAE,KAAK,CAAC;oBAAA;oBAAM;oBAClBF,OAAA,CAACV,MAAM;sBACL2G,OAAO,EAAC,gBAAgB;sBACxBP,IAAI,EAAC,IAAI;sBACTQ,OAAO,EAAEA,CAAA,KAAM7B,gBAAgB,CAACtD,IAAI,CAACb,EAAE,CAAE;sBACzC,cAAY,UAAUa,IAAI,CAACZ,QAAQ,EAAG;sBAAAsF,QAAA,eAEtCzF,OAAA;wBAAGgG,SAAS,EAAC;sBAAa;wBAAAJ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACzB,CACT;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA,GAhDEhF,IAAI,CAACb,EAAE;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAiDZ,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGP/F,OAAA,CAACP,KAAK;MAACuH,IAAI,EAAE3F,SAAU;MAAC4F,MAAM,EAAEnC,gBAAiB;MAACY,IAAI,EAAC,IAAI;MAAAD,QAAA,gBACzDzF,OAAA,CAACP,KAAK,CAACkH,MAAM;QAACO,WAAW;QAAAzB,QAAA,eACvBzF,OAAA,CAACP,KAAK,CAAC0H,KAAK;UAAA1B,QAAA,EACTlE,WAAW,GAAG,WAAW,GAAG;QAAiB;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACf/F,OAAA,CAACR,IAAI;QAAC4H,QAAQ,EAAE9D,YAAa;QAAAmC,QAAA,gBAC3BzF,OAAA,CAACP,KAAK,CAACmH,IAAI;UAAAnB,QAAA,eACTzF,OAAA,CAACd,GAAG;YAAC8G,SAAS,EAAC,KAAK;YAAAP,QAAA,gBAClBzF,OAAA,CAACb,GAAG;cAACgH,EAAE,EAAE,CAAE;cAAAV,QAAA,eACTzF,OAAA,CAACR,IAAI,CAAC6H,KAAK;gBAAA5B,QAAA,gBACTzF,OAAA,CAACR,IAAI,CAAC8H,KAAK;kBAACC,OAAO,EAAC,UAAU;kBAAA9B,QAAA,EAAC;gBAAU;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACtD/F,OAAA,CAACR,IAAI,CAAC6G,OAAO;kBACXnG,EAAE,EAAC,UAAU;kBACboG,IAAI,EAAC,MAAM;kBACXE,KAAK,EAAErE,QAAQ,CAAChC,QAAS;kBACzBsG,QAAQ,EAAGlD,CAAC,IAAKnB,WAAW,CAAC;oBAAE,GAAGD,QAAQ;oBAAEhC,QAAQ,EAAEoD,CAAC,CAACmD,MAAM,CAACF;kBAAM,CAAC,CAAE;kBACxEgB,SAAS,EAAE,CAAC,CAAClF,MAAM,CAACnC,QAAS;kBAC7BsH,QAAQ,EAAE,CAAC,CAAClG,WAAY;kBACxB,oBAAiB;gBAAe;kBAAAqE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC,CAAC,eACF/F,OAAA,CAACR,IAAI,CAAC6G,OAAO,CAACqB,QAAQ;kBAACpB,IAAI,EAAC,SAAS;kBAACpG,EAAE,EAAC,eAAe;kBAAAuF,QAAA,EACrDnD,MAAM,CAACnC;gBAAQ;kBAAAyF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eAEN/F,OAAA,CAACb,GAAG;cAACgH,EAAE,EAAE,CAAE;cAAAV,QAAA,eACTzF,OAAA,CAACR,IAAI,CAAC6H,KAAK;gBAAA5B,QAAA,gBACTzF,OAAA,CAACR,IAAI,CAAC8H,KAAK;kBAACC,OAAO,EAAC,UAAU;kBAAA9B,QAAA,EAAC;gBAAU;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACtD/F,OAAA,CAACR,IAAI,CAAC6G,OAAO;kBACXnG,EAAE,EAAC,UAAU;kBACboG,IAAI,EAAC,UAAU;kBACfE,KAAK,EAAErE,QAAQ,CAACE,QAAS;kBACzBoE,QAAQ,EAAGlD,CAAC,IAAKnB,WAAW,CAAC;oBAAE,GAAGD,QAAQ;oBAAEE,QAAQ,EAAEkB,CAAC,CAACmD,MAAM,CAACF;kBAAM,CAAC,CAAE;kBACxEgB,SAAS,EAAE,CAAC,CAAClF,MAAM,CAACD,QAAS;kBAC7BkE,WAAW,EAAEhF,WAAW,GAAG,6BAA6B,GAAG,EAAG;kBAC9D,oBAAiB;gBAAe;kBAAAqE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC,CAAC,eACF/F,OAAA,CAACR,IAAI,CAAC6G,OAAO,CAACqB,QAAQ;kBAACpB,IAAI,EAAC,SAAS;kBAACpG,EAAE,EAAC,eAAe;kBAAAuF,QAAA,EACrDnD,MAAM,CAACD;gBAAQ;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eAEN/F,OAAA,CAACb,GAAG;cAACgH,EAAE,EAAE,CAAE;cAAAV,QAAA,eACTzF,OAAA,CAACR,IAAI,CAAC6H,KAAK;gBAAA5B,QAAA,gBACTzF,OAAA,CAACR,IAAI,CAAC8H,KAAK;kBAACC,OAAO,EAAC,WAAW;kBAAA9B,QAAA,EAAC;gBAAW;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACxD/F,OAAA,CAACR,IAAI,CAAC6G,OAAO;kBACXnG,EAAE,EAAC,WAAW;kBACdoG,IAAI,EAAC,MAAM;kBACXE,KAAK,EAAErE,QAAQ,CAAC/B,SAAU;kBAC1BqG,QAAQ,EAAGlD,CAAC,IAAKnB,WAAW,CAAC;oBAAE,GAAGD,QAAQ;oBAAE/B,SAAS,EAAEmD,CAAC,CAACmD,MAAM,CAACF;kBAAM,CAAC,CAAE;kBACzEgB,SAAS,EAAE,CAAC,CAAClF,MAAM,CAAClC,SAAU;kBAC9B,oBAAiB;gBAAe;kBAAAwF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC,CAAC,eACF/F,OAAA,CAACR,IAAI,CAAC6G,OAAO,CAACqB,QAAQ;kBAACpB,IAAI,EAAC,SAAS;kBAACpG,EAAE,EAAC,eAAe;kBAAAuF,QAAA,EACrDnD,MAAM,CAAClC;gBAAS;kBAAAwF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eAEN/F,OAAA,CAACb,GAAG;cAACgH,EAAE,EAAE,CAAE;cAAAV,QAAA,eACTzF,OAAA,CAACR,IAAI,CAAC6H,KAAK;gBAAA5B,QAAA,gBACTzF,OAAA,CAACR,IAAI,CAAC8H,KAAK;kBAACC,OAAO,EAAC,UAAU;kBAAA9B,QAAA,EAAC;gBAAU;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACtD/F,OAAA,CAACR,IAAI,CAAC6G,OAAO;kBACXnG,EAAE,EAAC,UAAU;kBACboG,IAAI,EAAC,MAAM;kBACXE,KAAK,EAAErE,QAAQ,CAAC9B,QAAS;kBACzBoG,QAAQ,EAAGlD,CAAC,IAAKnB,WAAW,CAAC;oBAAE,GAAGD,QAAQ;oBAAE9B,QAAQ,EAAEkD,CAAC,CAACmD,MAAM,CAACF;kBAAM,CAAC,CAAE;kBACxEgB,SAAS,EAAE,CAAC,CAAClF,MAAM,CAACjC,QAAS;kBAC7B,oBAAiB;gBAAe;kBAAAuF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC,CAAC,eACF/F,OAAA,CAACR,IAAI,CAAC6G,OAAO,CAACqB,QAAQ;kBAACpB,IAAI,EAAC,SAAS;kBAACpG,EAAE,EAAC,eAAe;kBAAAuF,QAAA,EACrDnD,MAAM,CAACjC;gBAAQ;kBAAAuF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eAEN/F,OAAA,CAACb,GAAG;cAACgH,EAAE,EAAE,CAAE;cAAAV,QAAA,eACTzF,OAAA,CAACR,IAAI,CAAC6H,KAAK;gBAAA5B,QAAA,gBACTzF,OAAA,CAACR,IAAI,CAAC8H,KAAK;kBAACC,OAAO,EAAC,YAAY;kBAAA9B,QAAA,EAAC;gBAAY;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC1D/F,OAAA,CAACR,IAAI,CAAC6G,OAAO;kBACXnG,EAAE,EAAC,YAAY;kBACfoG,IAAI,EAAC,MAAM;kBACXE,KAAK,EAAErE,QAAQ,CAAC7B,UAAW;kBAC3BmG,QAAQ,EAAGlD,CAAC,IAAKnB,WAAW,CAAC;oBAAE,GAAGD,QAAQ;oBAAE7B,UAAU,EAAEiD,CAAC,CAACmD,MAAM,CAACF;kBAAM,CAAC,CAAE;kBAC1EgB,SAAS,EAAE,CAAC,CAAClF,MAAM,CAAChC,UAAW;kBAC/B,oBAAiB;gBAAiB;kBAAAsF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnC,CAAC,eACF/F,OAAA,CAACR,IAAI,CAAC6G,OAAO,CAACqB,QAAQ;kBAACpB,IAAI,EAAC,SAAS;kBAACpG,EAAE,EAAC,iBAAiB;kBAAAuF,QAAA,EACvDnD,MAAM,CAAChC;gBAAU;kBAAAsF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eAEN/F,OAAA,CAACb,GAAG;cAACgH,EAAE,EAAE,CAAE;cAAAV,QAAA,eACTzF,OAAA,CAACR,IAAI,CAAC6H,KAAK;gBAAA5B,QAAA,gBACTzF,OAAA,CAACR,IAAI,CAAC8H,KAAK;kBAACC,OAAO,EAAC,MAAM;kBAAA9B,QAAA,EAAC;gBAAM;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC9C/F,OAAA,CAACR,IAAI,CAACmI,MAAM;kBACVzH,EAAE,EAAC,MAAM;kBACTsG,KAAK,EAAErE,QAAQ,CAAC5B,IAAK;kBACrBkG,QAAQ,EAAGlD,CAAC,IAAKnB,WAAW,CAAC;oBAAE,GAAGD,QAAQ;oBAAE5B,IAAI,EAAEgD,CAAC,CAACmD,MAAM,CAACF;kBAAM,CAAC,CAAE;kBACpEgB,SAAS,EAAE,CAAC,CAAClF,MAAM,CAAC/B,IAAK;kBACzB,oBAAiB,WAAW;kBAAAkF,QAAA,gBAE5BzF,OAAA;oBAAQwG,KAAK,EAAC,EAAE;oBAAAf,QAAA,EAAC;kBAAW;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EACpCpF,SAAS,CAAC+C,GAAG,CAACnD,IAAI,iBACjBP,OAAA;oBAAmBwG,KAAK,EAAEjG,IAAK;oBAAAkF,QAAA,EAC5BlF,IAAI,CAACqH,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGtH,IAAI,CAACuH,KAAK,CAAC,CAAC;kBAAC,GADlCvH,IAAI;oBAAAqF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAET,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACS,CAAC,eACd/F,OAAA,CAACR,IAAI,CAAC6G,OAAO,CAACqB,QAAQ;kBAACpB,IAAI,EAAC,SAAS;kBAACpG,EAAE,EAAC,WAAW;kBAAAuF,QAAA,EACjDnD,MAAM,CAAC/B;gBAAI;kBAAAqF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACS,CAAC,EACvBnF,gBAAgB,CAACuB,QAAQ,CAAC5B,IAAI,CAAC,iBAC9BP,OAAA,CAACR,IAAI,CAAC4G,IAAI;kBAACJ,SAAS,EAAC,YAAY;kBAAAP,QAAA,EAC9B7E,gBAAgB,CAACuB,QAAQ,CAAC5B,IAAI;gBAAC;kBAAAqF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB,CACZ;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACb/F,OAAA,CAACP,KAAK,CAACsI,MAAM;UAAAtC,QAAA,gBACXzF,OAAA,CAACV,MAAM;YAAC2G,OAAO,EAAC,WAAW;YAACC,OAAO,EAAEpB,gBAAiB;YAAAW,QAAA,EAAC;UAEvD;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT/F,OAAA,CAACV,MAAM;YAAC2G,OAAO,EAAC,SAAS;YAACK,IAAI,EAAC,QAAQ;YAAAb,QAAA,EACpClE,WAAW,GAAG,aAAa,GAAG;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGR/F,OAAA,CAACF,KAAK;MACJkH,IAAI,EAAErF,SAAU;MAChBqG,OAAO,EAAEnG,YAAa;MACtByE,IAAI,EAAEvE,SAAU;MAChBkG,OAAO,EAAEA,CAAA,KAAMrG,YAAY,CAAC,KAAK;IAAE;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACjF,EAAA,CA3iBID,KAAe;EAAA,QACFjB,OAAO,EACPZ,WAAW;AAAA;AAAAkJ,EAAA,GAFxBrH,KAAe;AA6iBrB,eAAeA,KAAK;AAAC,IAAAqH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}