{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\BLOCKCHAIN\\\\frontend\\\\src\\\\components\\\\Toast.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Toast as BootstrapToast, ToastContainer } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toast = ({\n  show,\n  message,\n  type = 'info',\n  onClose,\n  delay = 5000\n}) => {\n  _s();\n  const [showToast, setShowToast] = useState(show);\n  useEffect(() => {\n    setShowToast(show);\n  }, [show]);\n  const handleClose = () => {\n    setShowToast(false);\n    onClose();\n  };\n  const getToastVariant = () => {\n    switch (type) {\n      case 'success':\n        return 'success';\n      case 'error':\n        return 'danger';\n      case 'warning':\n        return 'warning';\n      default:\n        return 'info';\n    }\n  };\n  const getIcon = () => {\n    switch (type) {\n      case 'success':\n        return 'bi-check-circle';\n      case 'error':\n        return 'bi-exclamation-triangle';\n      case 'warning':\n        return 'bi-exclamation-circle';\n      default:\n        return 'bi-info-circle';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ToastContainer, {\n    position: \"top-end\",\n    className: \"p-3\",\n    children: /*#__PURE__*/_jsxDEV(BootstrapToast, {\n      show: showToast,\n      onClose: handleClose,\n      delay: delay,\n      autohide: true,\n      bg: getToastVariant(),\n      children: [/*#__PURE__*/_jsxDEV(BootstrapToast.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `bi ${getIcon()} me-2`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"me-auto\",\n          children: type.charAt(0).toUpperCase() + type.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BootstrapToast.Body, {\n        className: type === 'error' ? 'text-white' : '',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Toast, \"CDToS30F6u1gx3HjCskYmmwjZG0=\");\n_c = Toast;\nexport default Toast;\nvar _c;\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"names":["React","useState","useEffect","Toast","BootstrapToast","ToastContainer","jsxDEV","_jsxDEV","show","message","type","onClose","delay","_s","showToast","setShowToast","handleClose","getToastVariant","getIcon","position","className","children","autohide","bg","Header","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","Body","_c","$RefreshReg$"],"sources":["F:/Project/BLOCKCHAIN/frontend/src/components/Toast.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Toast as BootstrapToast, ToastContainer } from 'react-bootstrap';\r\n\r\ninterface ToastProps {\r\n  show: boolean;\r\n  message: string;\r\n  type?: 'success' | 'error' | 'warning' | 'info';\r\n  onClose: () => void;\r\n  delay?: number;\r\n}\r\n\r\nconst Toast: React.FC<ToastProps> = ({ \r\n  show, \r\n  message, \r\n  type = 'info', \r\n  onClose, \r\n  delay = 5000 \r\n}) => {\r\n  const [showToast, setShowToast] = useState(show);\r\n\r\n  useEffect(() => {\r\n    setShowToast(show);\r\n  }, [show]);\r\n\r\n  const handleClose = () => {\r\n    setShowToast(false);\r\n    onClose();\r\n  };\r\n\r\n  const getToastVariant = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return 'success';\r\n      case 'error':\r\n        return 'danger';\r\n      case 'warning':\r\n        return 'warning';\r\n      default:\r\n        return 'info';\r\n    }\r\n  };\r\n\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return 'bi-check-circle';\r\n      case 'error':\r\n        return 'bi-exclamation-triangle';\r\n      case 'warning':\r\n        return 'bi-exclamation-circle';\r\n      default:\r\n        return 'bi-info-circle';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ToastContainer position=\"top-end\" className=\"p-3\">\r\n      <BootstrapToast\r\n        show={showToast}\r\n        onClose={handleClose}\r\n        delay={delay}\r\n        autohide\r\n        bg={getToastVariant()}\r\n      >\r\n        <BootstrapToast.Header>\r\n          <i className={`bi ${getIcon()} me-2`}></i>\r\n          <strong className=\"me-auto\">\r\n            {type.charAt(0).toUpperCase() + type.slice(1)}\r\n          </strong>\r\n        </BootstrapToast.Header>\r\n        <BootstrapToast.Body className={type === 'error' ? 'text-white' : ''}>\r\n          {message}\r\n        </BootstrapToast.Body>\r\n      </BootstrapToast>\r\n    </ToastContainer>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,IAAIC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1E,MAAMJ,KAA2B,GAAGA,CAAC;EACnCK,IAAI;EACJC,OAAO;EACPC,IAAI,GAAG,MAAM;EACbC,OAAO;EACPC,KAAK,GAAG;AACV,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACO,IAAI,CAAC;EAEhDN,SAAS,CAAC,MAAM;IACda,YAAY,CAACP,IAAI,CAAC;EACpB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBD,YAAY,CAAC,KAAK,CAAC;IACnBJ,OAAO,CAAC,CAAC;EACX,CAAC;EAED,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5B,QAAQP,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,SAAS;MAClB,KAAK,OAAO;QACV,OAAO,QAAQ;MACjB,KAAK,SAAS;QACZ,OAAO,SAAS;MAClB;QACE,OAAO,MAAM;IACjB;EACF,CAAC;EAED,MAAMQ,OAAO,GAAGA,CAAA,KAAM;IACpB,QAAQR,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,iBAAiB;MAC1B,KAAK,OAAO;QACV,OAAO,yBAAyB;MAClC,KAAK,SAAS;QACZ,OAAO,uBAAuB;MAChC;QACE,OAAO,gBAAgB;IAC3B;EACF,CAAC;EAED,oBACEH,OAAA,CAACF,cAAc;IAACc,QAAQ,EAAC,SAAS;IAACC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChDd,OAAA,CAACH,cAAc;MACbI,IAAI,EAAEM,SAAU;MAChBH,OAAO,EAAEK,WAAY;MACrBJ,KAAK,EAAEA,KAAM;MACbU,QAAQ;MACRC,EAAE,EAAEN,eAAe,CAAC,CAAE;MAAAI,QAAA,gBAEtBd,OAAA,CAACH,cAAc,CAACoB,MAAM;QAAAH,QAAA,gBACpBd,OAAA;UAAGa,SAAS,EAAE,MAAMF,OAAO,CAAC,CAAC;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CrB,OAAA;UAAQa,SAAS,EAAC,SAAS;UAAAC,QAAA,EACxBX,IAAI,CAACmB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGpB,IAAI,CAACqB,KAAK,CAAC,CAAC;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC,eACxBrB,OAAA,CAACH,cAAc,CAAC4B,IAAI;QAACZ,SAAS,EAAEV,IAAI,KAAK,OAAO,GAAG,YAAY,GAAG,EAAG;QAAAW,QAAA,EAClEZ;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAErB,CAAC;AAACf,EAAA,CAjEIV,KAA2B;AAAA8B,EAAA,GAA3B9B,KAA2B;AAmEjC,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}