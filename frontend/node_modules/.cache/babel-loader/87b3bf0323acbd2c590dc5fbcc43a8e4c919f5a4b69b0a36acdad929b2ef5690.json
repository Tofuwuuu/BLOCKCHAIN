{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Row,Col,Card,Table,Button,Badge,Accordion,Form,Modal,Alert,Spinner}from'react-bootstrap';import{apiService}from'../services/api';import{useAuth}from'../contexts/AuthContext';import LoadingSpinner from'../components/LoadingSpinner';import Toast from'../components/Toast';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Blockchain=()=>{const{user}=useAuth();const[blocks,setBlocks]=useState([]);const[peers,setPeers]=useState([]);const[loading,setLoading]=useState(true);const[mining,setMining]=useState(false);const[showAddPeer,setShowAddPeer]=useState(false);const[newPeerUrl,setNewPeerUrl]=useState('');const[showToast,setShowToast]=useState(false);const[toastMessage,setToastMessage]=useState('');const[toastType,setToastType]=useState('info');useEffect(()=>{fetchBlockchainData();},[]);const fetchBlockchainData=async()=>{try{setLoading(true);const[chainData,peersData]=await Promise.all([apiService.getBlockchain(),apiService.getPeers()]);setBlocks(chainData.chain);setPeers(peersData);}catch(error){console.error('Failed to fetch blockchain data:',error);setToastMessage('Failed to load blockchain data');setToastType('error');setShowToast(true);}finally{setLoading(false);}};const handleMine=async()=>{try{setMining(true);const newBlock=await apiService.mineBlock();setToastMessage(\"Block \".concat(newBlock.index,\" mined successfully!\"));setToastType('success');setShowToast(true);fetchBlockchainData();// Refresh data\n}catch(error){console.error('Mining failed:',error);setToastMessage('Mining failed');setToastType('error');setShowToast(true);}finally{setMining(false);}};const handleAddPeer=async()=>{if(!newPeerUrl.trim())return;try{await apiService.addPeer(newPeerUrl);setToastMessage('Peer added successfully');setToastType('success');setShowToast(true);setShowAddPeer(false);setNewPeerUrl('');fetchBlockchainData();// Refresh peers\n}catch(error){console.error('Failed to add peer:',error);setToastMessage('Failed to add peer');setToastType('error');setShowToast(true);}};const formatDate=dateString=>{return new Date(dateString).toLocaleString('en-PH');};const truncateHash=function(hash){let length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:8;return hash.length>length?\"\".concat(hash.substring(0,length),\"...\"):hash;};const getTransactionType=action=>{const types={'po_create':{variant:'primary',text:'PO Created'},'po_approve':{variant:'success',text:'PO Approved'},'inventory_adjust':{variant:'warning',text:'Inventory Adjusted'},'supplier_add':{variant:'info',text:'Supplier Added'},'default':{variant:'secondary',text:action}};return types[action]||types.default;};if(loading){return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(LoadingSpinner,{size:\"lg\",text:\"Loading blockchain data...\"})});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h2 mb-1\",children:\"Blockchain Explorer\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"View blockchain transactions and manage network peers\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[(user===null||user===void 0?void 0:user.is_admin)&&/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:handleMine,disabled:mining,\"aria-label\":\"Mine new block\",children:mining?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Mining...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-hammer me-2\"}),\"Mine Block\"]})}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-primary\",onClick:()=>setShowAddPeer(true),\"aria-label\":\"Add new peer\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-plus-circle me-2\"}),\"Add Peer\"]})]})]})})}),/*#__PURE__*/_jsxs(Row,{className:\"g-3 mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-primary mb-1\",children:blocks.length}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Total Blocks\"})]})})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-success mb-1\",children:blocks.reduce((total,block)=>total+block.transactions.length,0)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Total Transactions\"})]})})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-info mb-1\",children:peers.length}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Network Peers\"})]})})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Blockchain Chain\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(Accordion,{children:blocks.map((block,index)=>/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:index.toString(),children:[/*#__PURE__*/_jsx(Accordion.Header,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center w-100\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"fw-bold me-3\",children:[\"Block #\",block.index]}),/*#__PURE__*/_jsxs(Badge,{bg:\"secondary\",className:\"me-3\",children:[block.transactions.length,\" transactions\"]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted ms-auto\",children:formatDate(block.timestamp)})]})}),/*#__PURE__*/_jsxs(Accordion.Body,{children:[/*#__PURE__*/_jsxs(Row,{className:\"g-3 mb-3\",children:[/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Hash:\"}),/*#__PURE__*/_jsx(\"code\",{className:\"ms-2\",children:truncateHash(block.hash)})]}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Previous Hash:\"}),/*#__PURE__*/_jsx(\"code\",{className:\"ms-2\",children:truncateHash(block.previous_hash)})]}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nonce:\"}),\" \",block.nonce]}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Timestamp:\"}),\" \",formatDate(block.timestamp)]})]}),block.transactions.length>0?/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Sender\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Recipient\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Timestamp\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:block.transactions.map((tx,txIndex)=>{const txType=getTransactionType(tx.action);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:tx.sender}),/*#__PURE__*/_jsx(\"td\",{children:tx.recipient}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:txType.variant,children:txType.text})}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(tx.timestamp)})]},txIndex);})})]}):/*#__PURE__*/_jsx(Alert,{variant:\"info\",className:\"mb-0\",children:\"No transactions in this block\"})]})]},block.index))})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Network Peers\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:peers.length>0?/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,className:\"mb-0\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Peer ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"URL\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:peers.map(peer=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:peer.id}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"code\",{children:peer.url})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:peer.is_active?'success':'danger',children:peer.is_active?'Active':'Inactive'})})]},peer.id))})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-wifi-off text-muted\",style:{fontSize:'2rem'}}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mt-2\",children:\"No peers connected\"})]})})]}),/*#__PURE__*/_jsxs(Modal,{show:showAddPeer,onHide:()=>setShowAddPeer(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Add New Peer\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"peerUrl\",children:\"Peer URL\"}),/*#__PURE__*/_jsx(Form.Control,{id:\"peerUrl\",type:\"url\",placeholder:\"http://localhost:5001\",value:newPeerUrl,onChange:e=>setNewPeerUrl(e.target.value),\"aria-describedby\":\"peerUrlHelp\"}),/*#__PURE__*/_jsx(Form.Text,{id:\"peerUrlHelp\",className:\"text-muted\",children:\"Enter the URL of the peer node you want to connect to\"})]})})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowAddPeer(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleAddPeer,disabled:!newPeerUrl.trim(),children:\"Add Peer\"})]})]}),/*#__PURE__*/_jsx(Toast,{show:showToast,message:toastMessage,type:toastType,onClose:()=>setShowToast(false)})]});};export default Blockchain;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Table","Button","Badge","Accordion","Form","Modal","Alert","Spinner","apiService","useAuth","LoadingSpinner","Toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Blockchain","user","blocks","setBlocks","peers","setPeers","loading","setLoading","mining","setMining","showAddPeer","setShowAddPeer","newPeerUrl","setNewPeerUrl","showToast","setShowToast","toastMessage","setToastMessage","toastType","setToastType","fetchBlockchainData","chainData","peersData","Promise","all","getBlockchain","getPeers","chain","error","console","handleMine","newBlock","mineBlock","concat","index","handleAddPeer","trim","addPeer","formatDate","dateString","Date","toLocaleString","truncateHash","hash","length","arguments","undefined","substring","getTransactionType","action","types","variant","text","default","children","size","className","is_admin","onClick","disabled","animation","md","Body","reduce","total","block","transactions","Header","map","Item","eventKey","toString","bg","timestamp","previous_hash","nonce","striped","bordered","tx","txIndex","txType","sender","recipient","peer","id","url","is_active","style","fontSize","show","onHide","closeButton","Title","Group","Label","htmlFor","Control","type","placeholder","value","onChange","e","target","Text","Footer","message","onClose"],"sources":["F:/Project/BLOCKCHAIN/frontend/src/pages/Blockchain.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Container, Row, Col, Card, Table, Button, Badge, \r\n  Accordion, Form, Modal, Alert, Spinner \r\n} from 'react-bootstrap';\r\nimport { apiService, Block, Transaction, Peer } from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport Toast from '../components/Toast';\r\n\r\nconst Blockchain: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [blocks, setBlocks] = useState<Block[]>([]);\r\n  const [peers, setPeers] = useState<Peer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [mining, setMining] = useState(false);\r\n  const [showAddPeer, setShowAddPeer] = useState(false);\r\n  const [newPeerUrl, setNewPeerUrl] = useState('');\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState('');\r\n  const [toastType, setToastType] = useState<'success' | 'error' | 'warning' | 'info'>('info');\r\n\r\n  useEffect(() => {\r\n    fetchBlockchainData();\r\n  }, []);\r\n\r\n  const fetchBlockchainData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [chainData, peersData] = await Promise.all([\r\n        apiService.getBlockchain(),\r\n        apiService.getPeers()\r\n      ]);\r\n      setBlocks(chainData.chain);\r\n      setPeers(peersData);\r\n    } catch (error) {\r\n      console.error('Failed to fetch blockchain data:', error);\r\n      setToastMessage('Failed to load blockchain data');\r\n      setToastType('error');\r\n      setShowToast(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMine = async () => {\r\n    try {\r\n      setMining(true);\r\n      const newBlock = await apiService.mineBlock();\r\n      setToastMessage(`Block ${newBlock.index} mined successfully!`);\r\n      setToastType('success');\r\n      setShowToast(true);\r\n      fetchBlockchainData(); // Refresh data\r\n    } catch (error) {\r\n      console.error('Mining failed:', error);\r\n      setToastMessage('Mining failed');\r\n      setToastType('error');\r\n      setShowToast(true);\r\n    } finally {\r\n      setMining(false);\r\n    }\r\n  };\r\n\r\n  const handleAddPeer = async () => {\r\n    if (!newPeerUrl.trim()) return;\r\n\r\n    try {\r\n      await apiService.addPeer(newPeerUrl);\r\n      setToastMessage('Peer added successfully');\r\n      setToastType('success');\r\n      setShowToast(true);\r\n      setShowAddPeer(false);\r\n      setNewPeerUrl('');\r\n      fetchBlockchainData(); // Refresh peers\r\n    } catch (error) {\r\n      console.error('Failed to add peer:', error);\r\n      setToastMessage('Failed to add peer');\r\n      setToastType('error');\r\n      setShowToast(true);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleString('en-PH');\r\n  };\r\n\r\n  const truncateHash = (hash: string, length: number = 8): string => {\r\n    return hash.length > length ? `${hash.substring(0, length)}...` : hash;\r\n  };\r\n\r\n  const getTransactionType = (action: string): { variant: string; text: string } => {\r\n    const types = {\r\n      'po_create': { variant: 'primary', text: 'PO Created' },\r\n      'po_approve': { variant: 'success', text: 'PO Approved' },\r\n      'inventory_adjust': { variant: 'warning', text: 'Inventory Adjusted' },\r\n      'supplier_add': { variant: 'info', text: 'Supplier Added' },\r\n      'default': { variant: 'secondary', text: action }\r\n    };\r\n    return types[action as keyof typeof types] || types.default;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <LoadingSpinner size=\"lg\" text=\"Loading blockchain data...\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {/* Header */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h1 className=\"h2 mb-1\">Blockchain Explorer</h1>\r\n              <p className=\"text-muted mb-0\">\r\n                View blockchain transactions and manage network peers\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex gap-2\">\r\n              {user?.is_admin && (\r\n                <Button \r\n                  variant=\"success\" \r\n                  onClick={handleMine}\r\n                  disabled={mining}\r\n                  aria-label=\"Mine new block\"\r\n                >\r\n                  {mining ? (\r\n                    <>\r\n                      <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                      Mining...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <i className=\"bi bi-hammer me-2\"></i>\r\n                      Mine Block\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              )}\r\n              <Button \r\n                variant=\"outline-primary\" \r\n                onClick={() => setShowAddPeer(true)}\r\n                aria-label=\"Add new peer\"\r\n              >\r\n                <i className=\"bi bi-plus-circle me-2\"></i>\r\n                Add Peer\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Blockchain Stats */}\r\n      <Row className=\"g-3 mb-4\">\r\n        <Col md={4}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <h3 className=\"text-primary mb-1\">{blocks.length}</h3>\r\n              <p className=\"text-muted mb-0\">Total Blocks</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <h3 className=\"text-success mb-1\">\r\n                {blocks.reduce((total, block) => total + block.transactions.length, 0)}\r\n              </h3>\r\n              <p className=\"text-muted mb-0\">Total Transactions</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <h3 className=\"text-info mb-1\">{peers.length}</h3>\r\n              <p className=\"text-muted mb-0\">Network Peers</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Blockchain Chain */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Header>\r\n          <h5 className=\"mb-0\">Blockchain Chain</h5>\r\n        </Card.Header>\r\n        <Card.Body className=\"p-0\">\r\n          <Accordion>\r\n            {blocks.map((block, index) => (\r\n              <Accordion.Item key={block.index} eventKey={index.toString()}>\r\n                <Accordion.Header>\r\n                  <div className=\"d-flex align-items-center w-100\">\r\n                    <span className=\"fw-bold me-3\">Block #{block.index}</span>\r\n                    <Badge bg=\"secondary\" className=\"me-3\">\r\n                      {block.transactions.length} transactions\r\n                    </Badge>\r\n                    <small className=\"text-muted ms-auto\">\r\n                      {formatDate(block.timestamp)}\r\n                    </small>\r\n                  </div>\r\n                </Accordion.Header>\r\n                <Accordion.Body>\r\n                  <Row className=\"g-3 mb-3\">\r\n                    <Col md={6}>\r\n                      <strong>Hash:</strong> \r\n                      <code className=\"ms-2\">{truncateHash(block.hash)}</code>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <strong>Previous Hash:</strong> \r\n                      <code className=\"ms-2\">{truncateHash(block.previous_hash)}</code>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <strong>Nonce:</strong> {block.nonce}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <strong>Timestamp:</strong> {formatDate(block.timestamp)}\r\n                    </Col>\r\n                  </Row>\r\n                  \r\n                  {block.transactions.length > 0 ? (\r\n                    <Table striped bordered size=\"sm\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Sender</th>\r\n                          <th>Recipient</th>\r\n                          <th>Action</th>\r\n                          <th>Timestamp</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {block.transactions.map((tx, txIndex) => {\r\n                          const txType = getTransactionType(tx.action);\r\n                          return (\r\n                            <tr key={txIndex}>\r\n                              <td>{tx.sender}</td>\r\n                              <td>{tx.recipient}</td>\r\n                              <td>\r\n                                <Badge bg={txType.variant}>{txType.text}</Badge>\r\n                              </td>\r\n                              <td>{formatDate(tx.timestamp)}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  ) : (\r\n                    <Alert variant=\"info\" className=\"mb-0\">\r\n                      No transactions in this block\r\n                    </Alert>\r\n                  )}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            ))}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Network Peers */}\r\n      <Card>\r\n        <Card.Header>\r\n          <h5 className=\"mb-0\">Network Peers</h5>\r\n        </Card.Header>\r\n        <Card.Body className=\"p-0\">\r\n          {peers.length > 0 ? (\r\n            <Table striped bordered className=\"mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Peer ID</th>\r\n                  <th>URL</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {peers.map((peer) => (\r\n                  <tr key={peer.id}>\r\n                    <td>{peer.id}</td>\r\n                    <td>\r\n                      <code>{peer.url}</code>\r\n                    </td>\r\n                    <td>\r\n                      <Badge bg={peer.is_active ? 'success' : 'danger'}>\r\n                        {peer.is_active ? 'Active' : 'Inactive'}\r\n                      </Badge>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            <div className=\"text-center py-4\">\r\n              <i className=\"bi bi-wifi-off text-muted\" style={{ fontSize: '2rem' }}></i>\r\n              <p className=\"text-muted mt-2\">No peers connected</p>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Add Peer Modal */}\r\n      <Modal show={showAddPeer} onHide={() => setShowAddPeer(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add New Peer</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"peerUrl\">Peer URL</Form.Label>\r\n              <Form.Control\r\n                id=\"peerUrl\"\r\n                type=\"url\"\r\n                placeholder=\"http://localhost:5001\"\r\n                value={newPeerUrl}\r\n                onChange={(e) => setNewPeerUrl(e.target.value)}\r\n                aria-describedby=\"peerUrlHelp\"\r\n              />\r\n              <Form.Text id=\"peerUrlHelp\" className=\"text-muted\">\r\n                Enter the URL of the peer node you want to connect to\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowAddPeer(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleAddPeer} disabled={!newPeerUrl.trim()}>\r\n            Add Peer\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Toast Notification */}\r\n      <Toast\r\n        show={showToast}\r\n        message={toastMessage}\r\n        type={toastType}\r\n        onClose={() => setShowToast(false)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Blockchain;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}