{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Row,Col,Card,Table,Button,Badge,Accordion,Form,Modal,Alert,Spinner}from'react-bootstrap';import{apiService}from'../services/api';import{useAuth}from'../contexts/AuthContext';import LoadingSpinner from'../components/LoadingSpinner';import Toast from'../components/Toast';// Realistic blockchain data for procurement system\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const realisticBlocks=[{index:0,timestamp:\"2025-01-01T00:00:00Z\",transactions:[{from:\"system\",to:\"genesis\",amount:0,action:\"genesis\",data:{message:\"Philippine Procurement Solutions Blockchain Initialized\"},timestamp:\"2025-01-01T00:00:00Z\"}],nonce:0,hash:\"0000000000000000000000000000000000000000000000000000000000000000\",previous_hash:\"0\"},{index:1,timestamp:\"2025-01-15T10:30:00Z\",transactions:[{from:\"procurement0\",to:\"blockchain\",amount:60000.00,action:\"po_create\",data:{po_number:\"PO-20250101-001\",supplier:\"TechDistributors Inc\",amount:60000.00,items:[\"Office Chairs - Ergonomic\",\"Laptop Stands\"]},timestamp:\"2025-01-15T10:30:00Z\"},{from:\"procurement0\",to:\"blockchain\",amount:0,action:\"supplier_add\",data:{supplier_name:\"TechDistributors Inc\",bir_tin:\"123-456-789-000\",contact:\"Juan Dela Cruz\"},timestamp:\"2025-01-15T10:25:00Z\"}],nonce:12345,hash:\"0000000000000000000000000000000000000000000000000000000000000001\",previous_hash:\"0000000000000000000000000000000000000000000000000000000000000000\"},{index:2,timestamp:\"2025-01-16T14:20:00Z\",transactions:[{from:\"admin\",to:\"blockchain\",amount:0,action:\"po_approve\",data:{po_number:\"PO-20250101-001\",approved_by:\"admin\",approval_notes:\"Approved for procurement\"},timestamp:\"2025-01-16T14:20:00Z\"},{from:\"procurement1\",to:\"blockchain\",amount:45000.00,action:\"po_create\",data:{po_number:\"PO-20250101-002\",supplier:\"ABC Supplies\",amount:45000.00,items:[\"Wireless Keyboards\",\"Desk Organizers\"]},timestamp:\"2025-01-16T14:15:00Z\"},{from:\"procurement1\",to:\"blockchain\",amount:0,action:\"supplier_add\",data:{supplier_name:\"ABC Supplies\",bir_tin:\"234-567-890-000\",contact:\"Maria Santos\"},timestamp:\"2025-01-16T14:10:00Z\"}],nonce:23456,hash:\"0000000000000000000000000000000000000000000000000000000000000002\",previous_hash:\"0000000000000000000000000000000000000000000000000000000000000001\"},{index:3,timestamp:\"2025-01-17T09:45:00Z\",transactions:[{from:\"admin\",to:\"blockchain\",amount:0,action:\"po_approve\",data:{po_number:\"PO-20250101-002\",approved_by:\"admin\",approval_notes:\"Approved with minor adjustments\"},timestamp:\"2025-01-17T09:45:00Z\"},{from:\"procurement2\",to:\"blockchain\",amount:0,action:\"inventory_adjust\",data:{item:\"Office Chairs - Ergonomic\",quantity:20,adjustment_type:\"received\",reference:\"PO-20250101-001\"},timestamp:\"2025-01-17T09:40:00Z\"},{from:\"procurement2\",to:\"blockchain\",amount:0,action:\"inventory_adjust\",data:{item:\"Laptop Stands\",quantity:10,adjustment_type:\"received\",reference:\"PO-20250101-001\"},timestamp:\"2025-01-17T09:35:00Z\"}],nonce:34567,hash:\"0000000000000000000000000000000000000000000000000000000000000003\",previous_hash:\"0000000000000000000000000000000000000000000000000000000000000002\"},{index:4,timestamp:\"2025-01-18T16:30:00Z\",transactions:[{from:\"procurement0\",to:\"blockchain\",amount:75000.00,action:\"po_create\",data:{po_number:\"PO-20250101-003\",supplier:\"Metro Manila Electronics\",amount:75000.00,items:[\"Office Chairs - Ergonomic\",\"Laptop Stands\"]},timestamp:\"2025-01-18T16:30:00Z\"},{from:\"procurement0\",to:\"blockchain\",amount:0,action:\"supplier_add\",data:{supplier_name:\"Metro Manila Electronics\",bir_tin:\"345-678-901-000\",contact:\"Pedro Martinez\"},timestamp:\"2025-01-18T16:25:00Z\"},{from:\"finance1\",to:\"blockchain\",amount:60000.00,action:\"payment_processed\",data:{po_number:\"PO-20250101-001\",amount:60000.00,payment_method:\"bank_transfer\",reference:\"PAY-20250118-001\"},timestamp:\"2025-01-18T16:20:00Z\"}],nonce:45678,hash:\"0000000000000000000000000000000000000000000000000000000000000004\",previous_hash:\"0000000000000000000000000000000000000000000000000000000000000003\"},{index:5,timestamp:\"2025-01-19T11:15:00Z\",transactions:[{from:\"admin\",to:\"blockchain\",amount:0,action:\"po_approve\",data:{po_number:\"PO-20250101-003\",approved_by:\"admin\",approval_notes:\"Approved for premium delivery\"},timestamp:\"2025-01-19T11:15:00Z\"},{from:\"procurement1\",to:\"blockchain\",amount:0,action:\"inventory_adjust\",data:{item:\"Wireless Keyboards\",quantity:30,adjustment_type:\"received\",reference:\"PO-20250101-002\"},timestamp:\"2025-01-19T11:10:00Z\"},{from:\"procurement1\",to:\"blockchain\",amount:0,action:\"inventory_adjust\",data:{item:\"Desk Organizers\",quantity:25,adjustment_type:\"received\",reference:\"PO-20250101-002\"},timestamp:\"2025-01-19T11:05:00Z\"},{from:\"validator1\",to:\"blockchain\",amount:0,action:\"quality_check\",data:{po_number:\"PO-20250101-002\",status:\"passed\",inspector:\"Ana Reyes\",notes:\"All items meet quality standards\"},timestamp:\"2025-01-19T11:00:00Z\"}],nonce:56789,hash:\"0000000000000000000000000000000000000000000000000000000000000005\",previous_hash:\"0000000000000000000000000000000000000000000000000000000000000004\"}];const realisticPeers=[{id:\"node-001\",url:\"http://localhost:3002\",is_active:true},{id:\"node-002\",url:\"http://localhost:3003\",is_active:true},{id:\"node-003\",url:\"http://localhost:3004\",is_active:false}];const Blockchain=()=>{const{user}=useAuth();const[blocks,setBlocks]=useState([]);const[peers,setPeers]=useState([]);const[loading,setLoading]=useState(true);const[mining,setMining]=useState(false);const[showAddPeer,setShowAddPeer]=useState(false);const[newPeerUrl,setNewPeerUrl]=useState('');const[showToast,setShowToast]=useState(false);const[toastMessage,setToastMessage]=useState('');const[toastType,setToastType]=useState('info');const[usingRealData,setUsingRealData]=useState(false);useEffect(()=>{fetchBlockchainData();},[]);const fetchBlockchainData=async()=>{try{setLoading(true);// Try to fetch from API first\ntry{const[chainData,peersData]=await Promise.all([apiService.getBlockchain(),apiService.getPeers()]);// Check if we have real blockchain data\nif(chainData.chain&&chainData.chain.length>0){setBlocks(chainData.chain);setPeers(peersData);setUsingRealData(false);console.log('Connected to backend blockchain:',chainData.chain.length,'blocks');}else{// If backend has no data, seed it with realistic data\nconsole.log('Backend has no blockchain data, seeding with realistic data...');await seedBackendWithData();setBlocks(realisticBlocks);setPeers(realisticPeers);setUsingRealData(true);setToastMessage('Backend initialized with realistic blockchain data');setToastType('success');setShowToast(true);}}catch(apiError){console.log('API not available, using realistic blockchain data...');// Use realistic data if API fails\nsetBlocks(realisticBlocks);setPeers(realisticPeers);setUsingRealData(true);// Show info toast\nsetToastMessage('Using realistic blockchain data - backend not available');setToastType('info');setShowToast(true);}}catch(error){console.error('Failed to fetch blockchain data:',error);// Fallback to realistic data\nsetBlocks(realisticBlocks);setPeers(realisticPeers);setUsingRealData(true);setToastMessage('Failed to load blockchain data, using realistic data');setToastType('warning');setShowToast(true);}finally{setLoading(false);}};const seedBackendWithData=async()=>{try{// Create realistic transactions in the backend\nconst transactions=[{from:\"procurement0\",to:\"blockchain\",amount:60000.00,action:\"po_create\",data:{po_number:\"PO-20250101-001\",supplier:\"TechDistributors Inc\",amount:60000.00,items:[\"Office Chairs - Ergonomic\",\"Laptop Stands\"]}},{from:\"procurement0\",to:\"blockchain\",amount:0,action:\"supplier_add\",data:{supplier_name:\"TechDistributors Inc\",bir_tin:\"123-456-789-000\",contact:\"Juan Dela Cruz\"}},{from:\"admin\",to:\"blockchain\",amount:0,action:\"po_approve\",data:{po_number:\"PO-20250101-001\",approved_by:\"admin\",approval_notes:\"Approved for procurement\"}}];// Add transactions to backend\nfor(const tx of transactions){try{await apiService.createTransaction(tx);}catch(error){console.log('Transaction already exists or failed:',error);}}// Mine a block to include the transactions\ntry{await apiService.mineBlock();}catch(error){console.log('Mining failed:',error);}}catch(error){console.error('Failed to seed backend data:',error);}};const handleMine=async()=>{try{setMining(true);if(usingRealData){var _blocks;// Simulate mining for realistic data\nconst newBlock={index:blocks.length,timestamp:new Date().toISOString(),transactions:[{from:(user===null||user===void 0?void 0:user.username)||\"admin\",to:\"blockchain\",amount:50.00,action:\"block_mined\",data:{miner:(user===null||user===void 0?void 0:user.username)||\"admin\",difficulty:4,reward:50.00},timestamp:new Date().toISOString()}],nonce:Math.floor(Math.random()*100000),hash:\"000000000000000000000000000000000000000000000000000000000000000\".concat(blocks.length),previous_hash:((_blocks=blocks[blocks.length-1])===null||_blocks===void 0?void 0:_blocks.hash)||\"0\"};setBlocks([...blocks,newBlock]);setToastMessage(\"Block \".concat(newBlock.index,\" mined successfully! (Demo)\"));setToastType('success');setShowToast(true);}else{// Real API call\nconst newBlock=await apiService.mineBlock();setToastMessage(\"Block \".concat(newBlock.index,\" mined successfully!\"));setToastType('success');setShowToast(true);fetchBlockchainData();// Refresh data\n}}catch(error){console.error('Mining failed:',error);setToastMessage('Mining failed');setToastType('error');setShowToast(true);}finally{setMining(false);}};const handleAddPeer=async()=>{if(!newPeerUrl.trim())return;try{if(usingRealData){// Simulate adding peer for realistic data\nconst newPeer={id:\"node-\".concat(String(peers.length+1).padStart(3,'0')),url:newPeerUrl,is_active:true};setPeers([...peers,newPeer]);setToastMessage('Peer added successfully (Demo)');setToastType('success');setShowToast(true);setShowAddPeer(false);setNewPeerUrl('');}else{// Real API call\nawait apiService.addPeer(newPeerUrl);setToastMessage('Peer added successfully');setToastType('success');setShowToast(true);setShowAddPeer(false);setNewPeerUrl('');fetchBlockchainData();// Refresh peers\n}}catch(error){console.error('Failed to add peer:',error);setToastMessage('Failed to add peer');setToastType('error');setShowToast(true);}};const formatDate=dateString=>{return new Date(dateString).toLocaleString('en-PH');};const truncateHash=function(hash){let length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:8;return hash.length>length?\"\".concat(hash.substring(0,length),\"...\"):hash;};const getTransactionType=action=>{const types={'genesis':{variant:'dark',text:'Genesis Block'},'po_create':{variant:'primary',text:'PO Created'},'po_approve':{variant:'success',text:'PO Approved'},'inventory_adjust':{variant:'warning',text:'Inventory Adjusted'},'supplier_add':{variant:'info',text:'Supplier Added'},'payment_processed':{variant:'success',text:'Payment Processed'},'quality_check':{variant:'info',text:'Quality Check'},'block_mined':{variant:'secondary',text:'Block Mined'},'default':{variant:'secondary',text:action}};return types[action]||types.default;};const formatTransactionData=data=>{if(typeof data==='string')return data;if(data.po_number)return\"PO: \".concat(data.po_number);if(data.supplier_name)return\"Supplier: \".concat(data.supplier_name);if(data.item)return\"Item: \".concat(data.item);if(data.amount)return\"Amount: \\u20B1\".concat(data.amount.toLocaleString());if(data.message)return data.message;return JSON.stringify(data,null,2);};if(loading){return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(LoadingSpinner,{size:\"lg\",text:\"Loading blockchain data...\"})});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h2 mb-1\",children:\"Blockchain Explorer\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted mb-0\",children:[\"View blockchain transactions and manage network peers\",usingRealData&&/*#__PURE__*/_jsx(\"span\",{className:\"ms-2 badge bg-info text-dark\",children:\"Realistic Data\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[(user===null||user===void 0?void 0:user.is_admin)&&/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:handleMine,disabled:mining,\"aria-label\":\"Mine new block\",children:mining?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Mining...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-hammer me-2\"}),\"Mine Block\"]})}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-primary\",onClick:()=>setShowAddPeer(true),\"aria-label\":\"Add new peer\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-plus-circle me-2\"}),\"Add Peer\"]})]})]})})}),/*#__PURE__*/_jsxs(Row,{className:\"g-3 mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-primary mb-1\",children:blocks.length}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Total Blocks\"})]})})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-success mb-1\",children:blocks.reduce((total,block)=>total+block.transactions.length,0)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Total Transactions\"})]})})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-info mb-1\",children:peers.length}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Network Peers\"})]})})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Blockchain Chain\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(Accordion,{children:blocks.map((block,index)=>/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:index.toString(),children:[/*#__PURE__*/_jsx(Accordion.Header,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center w-100\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"fw-bold me-3\",children:[\"Block #\",block.index]}),/*#__PURE__*/_jsxs(Badge,{bg:\"secondary\",className:\"me-3\",children:[block.transactions.length,\" transactions\"]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted ms-auto\",children:formatDate(block.timestamp)})]})}),/*#__PURE__*/_jsxs(Accordion.Body,{children:[/*#__PURE__*/_jsxs(Row,{className:\"g-3 mb-3\",children:[/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Hash:\"}),/*#__PURE__*/_jsx(\"code\",{className:\"ms-2\",children:truncateHash(block.hash)})]}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Previous Hash:\"}),/*#__PURE__*/_jsx(\"code\",{className:\"ms-2\",children:truncateHash(block.previous_hash)})]}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nonce:\"}),\" \",block.nonce]}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Timestamp:\"}),\" \",formatDate(block.timestamp)]})]}),block.transactions.length>0?/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Sender\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Recipient\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Data\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Timestamp\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:block.transactions.map((tx,txIndex)=>{const txType=getTransactionType(tx.action);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"code\",{children:tx.from})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"code\",{children:tx.to})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:txType.variant,children:txType.text})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:formatTransactionData(tx.data)})}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(tx.timestamp)})]},txIndex);})})]}):/*#__PURE__*/_jsx(Alert,{variant:\"info\",className:\"mb-0\",children:\"No transactions in this block\"})]})]},block.index))})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Network Peers\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:peers.length>0?/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,className:\"mb-0\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Peer ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"URL\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:peers.map(peer=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"code\",{children:peer.id})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"code\",{children:peer.url})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:peer.is_active?'success':'danger',children:peer.is_active?'Active':'Inactive'})})]},peer.id))})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-wifi-off text-muted\",style:{fontSize:'2rem'}}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mt-2\",children:\"No peers connected\"})]})})]}),/*#__PURE__*/_jsxs(Modal,{show:showAddPeer,onHide:()=>setShowAddPeer(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Add New Peer\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"peerUrl\",children:\"Peer URL\"}),/*#__PURE__*/_jsx(Form.Control,{id:\"peerUrl\",type:\"url\",placeholder:\"http://localhost:5001\",value:newPeerUrl,onChange:e=>setNewPeerUrl(e.target.value),\"aria-describedby\":\"peerUrlHelp\"}),/*#__PURE__*/_jsx(Form.Text,{id:\"peerUrlHelp\",className:\"text-muted\",children:\"Enter the URL of the peer node you want to connect to\"})]})})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowAddPeer(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleAddPeer,disabled:!newPeerUrl.trim(),children:\"Add Peer\"})]})]}),/*#__PURE__*/_jsx(Toast,{show:showToast,message:toastMessage,type:toastType,onClose:()=>setShowToast(false)})]});};export default Blockchain;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Table","Button","Badge","Accordion","Form","Modal","Alert","Spinner","apiService","useAuth","LoadingSpinner","Toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","realisticBlocks","index","timestamp","transactions","from","to","amount","action","data","message","nonce","hash","previous_hash","po_number","supplier","items","supplier_name","bir_tin","contact","approved_by","approval_notes","item","quantity","adjustment_type","reference","payment_method","status","inspector","notes","realisticPeers","id","url","is_active","Blockchain","user","blocks","setBlocks","peers","setPeers","loading","setLoading","mining","setMining","showAddPeer","setShowAddPeer","newPeerUrl","setNewPeerUrl","showToast","setShowToast","toastMessage","setToastMessage","toastType","setToastType","usingRealData","setUsingRealData","fetchBlockchainData","chainData","peersData","Promise","all","getBlockchain","getPeers","chain","length","console","log","seedBackendWithData","apiError","error","tx","createTransaction","mineBlock","handleMine","_blocks","newBlock","Date","toISOString","username","miner","difficulty","reward","Math","floor","random","concat","handleAddPeer","trim","newPeer","String","padStart","addPeer","formatDate","dateString","toLocaleString","truncateHash","arguments","undefined","substring","getTransactionType","types","variant","text","default","formatTransactionData","JSON","stringify","children","size","className","is_admin","onClick","disabled","animation","md","Body","reduce","total","block","Header","map","Item","eventKey","toString","bg","striped","bordered","txIndex","txType","peer","style","fontSize","show","onHide","closeButton","Title","Group","Label","htmlFor","Control","type","placeholder","value","onChange","e","target","Text","Footer","onClose"],"sources":["F:/Project/BLOCKCHAIN/frontend/src/pages/Blockchain.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Container, Row, Col, Card, Table, Button, Badge, \r\n  Accordion, Form, Modal, Alert, Spinner \r\n} from 'react-bootstrap';\r\nimport { apiService, Block, Transaction, Peer } from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport Toast from '../components/Toast';\r\n\r\n// Realistic blockchain data for procurement system\r\nconst realisticBlocks: Block[] = [\r\n  {\r\n    index: 0,\r\n    timestamp: \"2025-01-01T00:00:00Z\",\r\n    transactions: [\r\n      {\r\n        from: \"system\",\r\n        to: \"genesis\",\r\n        amount: 0,\r\n        action: \"genesis\",\r\n        data: { message: \"Philippine Procurement Solutions Blockchain Initialized\" },\r\n        timestamp: \"2025-01-01T00:00:00Z\"\r\n      }\r\n    ],\r\n    nonce: 0,\r\n    hash: \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    previous_hash: \"0\"\r\n  },\r\n  {\r\n    index: 1,\r\n    timestamp: \"2025-01-15T10:30:00Z\",\r\n    transactions: [\r\n      {\r\n        from: \"procurement0\",\r\n        to: \"blockchain\",\r\n        amount: 60000.00,\r\n        action: \"po_create\",\r\n        data: {\r\n          po_number: \"PO-20250101-001\",\r\n          supplier: \"TechDistributors Inc\",\r\n          amount: 60000.00,\r\n          items: [\"Office Chairs - Ergonomic\", \"Laptop Stands\"]\r\n        },\r\n        timestamp: \"2025-01-15T10:30:00Z\"\r\n      },\r\n      {\r\n        from: \"procurement0\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"supplier_add\",\r\n        data: {\r\n          supplier_name: \"TechDistributors Inc\",\r\n          bir_tin: \"123-456-789-000\",\r\n          contact: \"Juan Dela Cruz\"\r\n        },\r\n        timestamp: \"2025-01-15T10:25:00Z\"\r\n      }\r\n    ],\r\n    nonce: 12345,\r\n    hash: \"0000000000000000000000000000000000000000000000000000000000000001\",\r\n    previous_hash: \"0000000000000000000000000000000000000000000000000000000000000000\"\r\n  },\r\n  {\r\n    index: 2,\r\n    timestamp: \"2025-01-16T14:20:00Z\",\r\n    transactions: [\r\n      {\r\n        from: \"admin\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"po_approve\",\r\n        data: {\r\n          po_number: \"PO-20250101-001\",\r\n          approved_by: \"admin\",\r\n          approval_notes: \"Approved for procurement\"\r\n        },\r\n        timestamp: \"2025-01-16T14:20:00Z\"\r\n      },\r\n      {\r\n        from: \"procurement1\",\r\n        to: \"blockchain\",\r\n        amount: 45000.00,\r\n        action: \"po_create\",\r\n        data: {\r\n          po_number: \"PO-20250101-002\",\r\n          supplier: \"ABC Supplies\",\r\n          amount: 45000.00,\r\n          items: [\"Wireless Keyboards\", \"Desk Organizers\"]\r\n        },\r\n        timestamp: \"2025-01-16T14:15:00Z\"\r\n      },\r\n      {\r\n        from: \"procurement1\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"supplier_add\",\r\n        data: {\r\n          supplier_name: \"ABC Supplies\",\r\n          bir_tin: \"234-567-890-000\",\r\n          contact: \"Maria Santos\"\r\n        },\r\n        timestamp: \"2025-01-16T14:10:00Z\"\r\n      }\r\n    ],\r\n    nonce: 23456,\r\n    hash: \"0000000000000000000000000000000000000000000000000000000000000002\",\r\n    previous_hash: \"0000000000000000000000000000000000000000000000000000000000000001\"\r\n  },\r\n  {\r\n    index: 3,\r\n    timestamp: \"2025-01-17T09:45:00Z\",\r\n    transactions: [\r\n      {\r\n        from: \"admin\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"po_approve\",\r\n        data: {\r\n          po_number: \"PO-20250101-002\",\r\n          approved_by: \"admin\",\r\n          approval_notes: \"Approved with minor adjustments\"\r\n        },\r\n        timestamp: \"2025-01-17T09:45:00Z\"\r\n      },\r\n      {\r\n        from: \"procurement2\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"inventory_adjust\",\r\n        data: {\r\n          item: \"Office Chairs - Ergonomic\",\r\n          quantity: 20,\r\n          adjustment_type: \"received\",\r\n          reference: \"PO-20250101-001\"\r\n        },\r\n        timestamp: \"2025-01-17T09:40:00Z\"\r\n      },\r\n      {\r\n        from: \"procurement2\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"inventory_adjust\",\r\n        data: {\r\n          item: \"Laptop Stands\",\r\n          quantity: 10,\r\n          adjustment_type: \"received\",\r\n          reference: \"PO-20250101-001\"\r\n        },\r\n        timestamp: \"2025-01-17T09:35:00Z\"\r\n      }\r\n    ],\r\n    nonce: 34567,\r\n    hash: \"0000000000000000000000000000000000000000000000000000000000000003\",\r\n    previous_hash: \"0000000000000000000000000000000000000000000000000000000000000002\"\r\n  },\r\n  {\r\n    index: 4,\r\n    timestamp: \"2025-01-18T16:30:00Z\",\r\n    transactions: [\r\n      {\r\n        from: \"procurement0\",\r\n        to: \"blockchain\",\r\n        amount: 75000.00,\r\n        action: \"po_create\",\r\n        data: {\r\n          po_number: \"PO-20250101-003\",\r\n          supplier: \"Metro Manila Electronics\",\r\n          amount: 75000.00,\r\n          items: [\"Office Chairs - Ergonomic\", \"Laptop Stands\"]\r\n        },\r\n        timestamp: \"2025-01-18T16:30:00Z\"\r\n      },\r\n      {\r\n        from: \"procurement0\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"supplier_add\",\r\n        data: {\r\n          supplier_name: \"Metro Manila Electronics\",\r\n          bir_tin: \"345-678-901-000\",\r\n          contact: \"Pedro Martinez\"\r\n        },\r\n        timestamp: \"2025-01-18T16:25:00Z\"\r\n      },\r\n      {\r\n        from: \"finance1\",\r\n        to: \"blockchain\",\r\n        amount: 60000.00,\r\n        action: \"payment_processed\",\r\n        data: {\r\n          po_number: \"PO-20250101-001\",\r\n          amount: 60000.00,\r\n          payment_method: \"bank_transfer\",\r\n          reference: \"PAY-20250118-001\"\r\n        },\r\n        timestamp: \"2025-01-18T16:20:00Z\"\r\n      }\r\n    ],\r\n    nonce: 45678,\r\n    hash: \"0000000000000000000000000000000000000000000000000000000000000004\",\r\n    previous_hash: \"0000000000000000000000000000000000000000000000000000000000000003\"\r\n  },\r\n  {\r\n    index: 5,\r\n    timestamp: \"2025-01-19T11:15:00Z\",\r\n    transactions: [\r\n      {\r\n        from: \"admin\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"po_approve\",\r\n        data: {\r\n          po_number: \"PO-20250101-003\",\r\n          approved_by: \"admin\",\r\n          approval_notes: \"Approved for premium delivery\"\r\n        },\r\n        timestamp: \"2025-01-19T11:15:00Z\"\r\n      },\r\n      {\r\n        from: \"procurement1\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"inventory_adjust\",\r\n        data: {\r\n          item: \"Wireless Keyboards\",\r\n          quantity: 30,\r\n          adjustment_type: \"received\",\r\n          reference: \"PO-20250101-002\"\r\n        },\r\n        timestamp: \"2025-01-19T11:10:00Z\"\r\n      },\r\n      {\r\n        from: \"procurement1\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"inventory_adjust\",\r\n        data: {\r\n          item: \"Desk Organizers\",\r\n          quantity: 25,\r\n          adjustment_type: \"received\",\r\n          reference: \"PO-20250101-002\"\r\n        },\r\n        timestamp: \"2025-01-19T11:05:00Z\"\r\n      },\r\n      {\r\n        from: \"validator1\",\r\n        to: \"blockchain\",\r\n        amount: 0,\r\n        action: \"quality_check\",\r\n        data: {\r\n          po_number: \"PO-20250101-002\",\r\n          status: \"passed\",\r\n          inspector: \"Ana Reyes\",\r\n          notes: \"All items meet quality standards\"\r\n        },\r\n        timestamp: \"2025-01-19T11:00:00Z\"\r\n      }\r\n    ],\r\n    nonce: 56789,\r\n    hash: \"0000000000000000000000000000000000000000000000000000000000000005\",\r\n    previous_hash: \"0000000000000000000000000000000000000000000000000000000000000004\"\r\n  }\r\n];\r\n\r\nconst realisticPeers: Peer[] = [\r\n  {\r\n    id: \"node-001\",\r\n    url: \"http://localhost:3002\",\r\n    is_active: true\r\n  },\r\n  {\r\n    id: \"node-002\", \r\n    url: \"http://localhost:3003\",\r\n    is_active: true\r\n  },\r\n  {\r\n    id: \"node-003\",\r\n    url: \"http://localhost:3004\", \r\n    is_active: false\r\n  }\r\n];\r\n\r\nconst Blockchain: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [blocks, setBlocks] = useState<Block[]>([]);\r\n  const [peers, setPeers] = useState<Peer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [mining, setMining] = useState(false);\r\n  const [showAddPeer, setShowAddPeer] = useState(false);\r\n  const [newPeerUrl, setNewPeerUrl] = useState('');\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState('');\r\n  const [toastType, setToastType] = useState<'success' | 'error' | 'warning' | 'info'>('info');\r\n  const [usingRealData, setUsingRealData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchBlockchainData();\r\n  }, []);\r\n\r\n  const fetchBlockchainData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Try to fetch from API first\r\n      try {\r\n        const [chainData, peersData] = await Promise.all([\r\n          apiService.getBlockchain(),\r\n          apiService.getPeers()\r\n        ]);\r\n        \r\n        // Check if we have real blockchain data\r\n        if (chainData.chain && chainData.chain.length > 0) {\r\n          setBlocks(chainData.chain);\r\n          setPeers(peersData);\r\n          setUsingRealData(false);\r\n          console.log('Connected to backend blockchain:', chainData.chain.length, 'blocks');\r\n        } else {\r\n          // If backend has no data, seed it with realistic data\r\n          console.log('Backend has no blockchain data, seeding with realistic data...');\r\n          await seedBackendWithData();\r\n          setBlocks(realisticBlocks);\r\n          setPeers(realisticPeers);\r\n          setUsingRealData(true);\r\n          setToastMessage('Backend initialized with realistic blockchain data');\r\n          setToastType('success');\r\n          setShowToast(true);\r\n        }\r\n      } catch (apiError) {\r\n        console.log('API not available, using realistic blockchain data...');\r\n        // Use realistic data if API fails\r\n        setBlocks(realisticBlocks);\r\n        setPeers(realisticPeers);\r\n        setUsingRealData(true);\r\n        \r\n        // Show info toast\r\n        setToastMessage('Using realistic blockchain data - backend not available');\r\n        setToastType('info');\r\n        setShowToast(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch blockchain data:', error);\r\n      // Fallback to realistic data\r\n      setBlocks(realisticBlocks);\r\n      setPeers(realisticPeers);\r\n      setUsingRealData(true);\r\n      \r\n      setToastMessage('Failed to load blockchain data, using realistic data');\r\n      setToastType('warning');\r\n      setShowToast(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const seedBackendWithData = async () => {\r\n    try {\r\n      // Create realistic transactions in the backend\r\n      const transactions = [\r\n        {\r\n          from: \"procurement0\",\r\n          to: \"blockchain\",\r\n          amount: 60000.00,\r\n          action: \"po_create\",\r\n          data: {\r\n            po_number: \"PO-20250101-001\",\r\n            supplier: \"TechDistributors Inc\",\r\n            amount: 60000.00,\r\n            items: [\"Office Chairs - Ergonomic\", \"Laptop Stands\"]\r\n          }\r\n        },\r\n        {\r\n          from: \"procurement0\",\r\n          to: \"blockchain\",\r\n          amount: 0,\r\n          action: \"supplier_add\",\r\n          data: {\r\n            supplier_name: \"TechDistributors Inc\",\r\n            bir_tin: \"123-456-789-000\",\r\n            contact: \"Juan Dela Cruz\"\r\n          }\r\n        },\r\n        {\r\n          from: \"admin\",\r\n          to: \"blockchain\",\r\n          amount: 0,\r\n          action: \"po_approve\",\r\n          data: {\r\n            po_number: \"PO-20250101-001\",\r\n            approved_by: \"admin\",\r\n            approval_notes: \"Approved for procurement\"\r\n          }\r\n        }\r\n      ];\r\n\r\n      // Add transactions to backend\r\n      for (const tx of transactions) {\r\n        try {\r\n          await apiService.createTransaction(tx);\r\n        } catch (error) {\r\n          console.log('Transaction already exists or failed:', error);\r\n        }\r\n      }\r\n\r\n      // Mine a block to include the transactions\r\n      try {\r\n        await apiService.mineBlock();\r\n      } catch (error) {\r\n        console.log('Mining failed:', error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to seed backend data:', error);\r\n    }\r\n  };\r\n\r\n  const handleMine = async () => {\r\n    try {\r\n      setMining(true);\r\n      \r\n      if (usingRealData) {\r\n        // Simulate mining for realistic data\r\n        const newBlock: Block = {\r\n          index: blocks.length,\r\n          timestamp: new Date().toISOString(),\r\n          transactions: [\r\n            {\r\n              from: user?.username || \"admin\",\r\n              to: \"blockchain\",\r\n              amount: 50.00,\r\n              action: \"block_mined\",\r\n              data: {\r\n                miner: user?.username || \"admin\",\r\n                difficulty: 4,\r\n                reward: 50.00\r\n              },\r\n              timestamp: new Date().toISOString()\r\n            }\r\n          ],\r\n          nonce: Math.floor(Math.random() * 100000),\r\n          hash: `000000000000000000000000000000000000000000000000000000000000000${blocks.length}`,\r\n          previous_hash: blocks[blocks.length - 1]?.hash || \"0\"\r\n        };\r\n        \r\n        setBlocks([...blocks, newBlock]);\r\n        setToastMessage(`Block ${newBlock.index} mined successfully! (Demo)`);\r\n        setToastType('success');\r\n        setShowToast(true);\r\n      } else {\r\n        // Real API call\r\n        const newBlock = await apiService.mineBlock();\r\n        setToastMessage(`Block ${newBlock.index} mined successfully!`);\r\n        setToastType('success');\r\n        setShowToast(true);\r\n        fetchBlockchainData(); // Refresh data\r\n      }\r\n    } catch (error) {\r\n      console.error('Mining failed:', error);\r\n      setToastMessage('Mining failed');\r\n      setToastType('error');\r\n      setShowToast(true);\r\n    } finally {\r\n      setMining(false);\r\n    }\r\n  };\r\n\r\n  const handleAddPeer = async () => {\r\n    if (!newPeerUrl.trim()) return;\r\n\r\n    try {\r\n      if (usingRealData) {\r\n        // Simulate adding peer for realistic data\r\n        const newPeer: Peer = {\r\n          id: `node-${String(peers.length + 1).padStart(3, '0')}`,\r\n          url: newPeerUrl,\r\n          is_active: true\r\n        };\r\n        \r\n        setPeers([...peers, newPeer]);\r\n        setToastMessage('Peer added successfully (Demo)');\r\n        setToastType('success');\r\n        setShowToast(true);\r\n        setShowAddPeer(false);\r\n        setNewPeerUrl('');\r\n      } else {\r\n        // Real API call\r\n        await apiService.addPeer(newPeerUrl);\r\n        setToastMessage('Peer added successfully');\r\n        setToastType('success');\r\n        setShowToast(true);\r\n        setShowAddPeer(false);\r\n        setNewPeerUrl('');\r\n        fetchBlockchainData(); // Refresh peers\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to add peer:', error);\r\n      setToastMessage('Failed to add peer');\r\n      setToastType('error');\r\n      setShowToast(true);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleString('en-PH');\r\n  };\r\n\r\n  const truncateHash = (hash: string, length: number = 8): string => {\r\n    return hash.length > length ? `${hash.substring(0, length)}...` : hash;\r\n  };\r\n\r\n  const getTransactionType = (action: string): { variant: string; text: string } => {\r\n    const types = {\r\n      'genesis': { variant: 'dark', text: 'Genesis Block' },\r\n      'po_create': { variant: 'primary', text: 'PO Created' },\r\n      'po_approve': { variant: 'success', text: 'PO Approved' },\r\n      'inventory_adjust': { variant: 'warning', text: 'Inventory Adjusted' },\r\n      'supplier_add': { variant: 'info', text: 'Supplier Added' },\r\n      'payment_processed': { variant: 'success', text: 'Payment Processed' },\r\n      'quality_check': { variant: 'info', text: 'Quality Check' },\r\n      'block_mined': { variant: 'secondary', text: 'Block Mined' },\r\n      'default': { variant: 'secondary', text: action }\r\n    };\r\n    return types[action as keyof typeof types] || types.default;\r\n  };\r\n\r\n  const formatTransactionData = (data: any): string => {\r\n    if (typeof data === 'string') return data;\r\n    if (data.po_number) return `PO: ${data.po_number}`;\r\n    if (data.supplier_name) return `Supplier: ${data.supplier_name}`;\r\n    if (data.item) return `Item: ${data.item}`;\r\n    if (data.amount) return `Amount: ₱${data.amount.toLocaleString()}`;\r\n    if (data.message) return data.message;\r\n    return JSON.stringify(data, null, 2);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <LoadingSpinner size=\"lg\" text=\"Loading blockchain data...\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {/* Header */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h1 className=\"h2 mb-1\">Blockchain Explorer</h1>\r\n              <p className=\"text-muted mb-0\">\r\n                View blockchain transactions and manage network peers\r\n                {usingRealData && (\r\n                  <span className=\"ms-2 badge bg-info text-dark\">Realistic Data</span>\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex gap-2\">\r\n              {user?.is_admin && (\r\n                <Button \r\n                  variant=\"success\" \r\n                  onClick={handleMine}\r\n                  disabled={mining}\r\n                  aria-label=\"Mine new block\"\r\n                >\r\n                  {mining ? (\r\n                    <>\r\n                      <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                      Mining...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <i className=\"bi bi-hammer me-2\"></i>\r\n                      Mine Block\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              )}\r\n              <Button \r\n                variant=\"outline-primary\" \r\n                onClick={() => setShowAddPeer(true)}\r\n                aria-label=\"Add new peer\"\r\n              >\r\n                <i className=\"bi bi-plus-circle me-2\"></i>\r\n                Add Peer\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Blockchain Stats */}\r\n      <Row className=\"g-3 mb-4\">\r\n        <Col md={4}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <h3 className=\"text-primary mb-1\">{blocks.length}</h3>\r\n              <p className=\"text-muted mb-0\">Total Blocks</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <h3 className=\"text-success mb-1\">\r\n                {blocks.reduce((total, block) => total + block.transactions.length, 0)}\r\n              </h3>\r\n              <p className=\"text-muted mb-0\">Total Transactions</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"text-center\">\r\n            <Card.Body>\r\n              <h3 className=\"text-info mb-1\">{peers.length}</h3>\r\n              <p className=\"text-muted mb-0\">Network Peers</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Blockchain Chain */}\r\n      <Card className=\"mb-4\">\r\n        <Card.Header>\r\n          <h5 className=\"mb-0\">Blockchain Chain</h5>\r\n        </Card.Header>\r\n        <Card.Body className=\"p-0\">\r\n          <Accordion>\r\n            {blocks.map((block, index) => (\r\n              <Accordion.Item key={block.index} eventKey={index.toString()}>\r\n                <Accordion.Header>\r\n                  <div className=\"d-flex align-items-center w-100\">\r\n                    <span className=\"fw-bold me-3\">Block #{block.index}</span>\r\n                    <Badge bg=\"secondary\" className=\"me-3\">\r\n                      {block.transactions.length} transactions\r\n                    </Badge>\r\n                    <small className=\"text-muted ms-auto\">\r\n                      {formatDate(block.timestamp)}\r\n                    </small>\r\n                  </div>\r\n                </Accordion.Header>\r\n                <Accordion.Body>\r\n                  <Row className=\"g-3 mb-3\">\r\n                    <Col md={6}>\r\n                      <strong>Hash:</strong> \r\n                      <code className=\"ms-2\">{truncateHash(block.hash)}</code>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <strong>Previous Hash:</strong> \r\n                      <code className=\"ms-2\">{truncateHash(block.previous_hash)}</code>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <strong>Nonce:</strong> {block.nonce}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <strong>Timestamp:</strong> {formatDate(block.timestamp)}\r\n                    </Col>\r\n                  </Row>\r\n                  \r\n                  {block.transactions.length > 0 ? (\r\n                    <Table striped bordered size=\"sm\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Sender</th>\r\n                          <th>Recipient</th>\r\n                          <th>Action</th>\r\n                          <th>Data</th>\r\n                          <th>Timestamp</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {block.transactions.map((tx, txIndex) => {\r\n                          const txType = getTransactionType(tx.action);\r\n                          return (\r\n                            <tr key={txIndex}>\r\n                              <td>\r\n                                <code>{tx.from}</code>\r\n                              </td>\r\n                              <td>\r\n                                <code>{tx.to}</code>\r\n                              </td>\r\n                              <td>\r\n                                <Badge bg={txType.variant}>{txType.text}</Badge>\r\n                              </td>\r\n                              <td>\r\n                                <small className=\"text-muted\">\r\n                                  {formatTransactionData(tx.data)}\r\n                                </small>\r\n                              </td>\r\n                              <td>{formatDate(tx.timestamp)}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  ) : (\r\n                    <Alert variant=\"info\" className=\"mb-0\">\r\n                      No transactions in this block\r\n                    </Alert>\r\n                  )}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            ))}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Network Peers */}\r\n      <Card>\r\n        <Card.Header>\r\n          <h5 className=\"mb-0\">Network Peers</h5>\r\n        </Card.Header>\r\n        <Card.Body className=\"p-0\">\r\n          {peers.length > 0 ? (\r\n            <Table striped bordered className=\"mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Peer ID</th>\r\n                  <th>URL</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {peers.map((peer) => (\r\n                  <tr key={peer.id}>\r\n                    <td>\r\n                      <code>{peer.id}</code>\r\n                    </td>\r\n                    <td>\r\n                      <code>{peer.url}</code>\r\n                    </td>\r\n                    <td>\r\n                      <Badge bg={peer.is_active ? 'success' : 'danger'}>\r\n                        {peer.is_active ? 'Active' : 'Inactive'}\r\n                      </Badge>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            <div className=\"text-center py-4\">\r\n              <i className=\"bi bi-wifi-off text-muted\" style={{ fontSize: '2rem' }}></i>\r\n              <p className=\"text-muted mt-2\">No peers connected</p>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Add Peer Modal */}\r\n      <Modal show={showAddPeer} onHide={() => setShowAddPeer(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add New Peer</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"peerUrl\">Peer URL</Form.Label>\r\n              <Form.Control\r\n                id=\"peerUrl\"\r\n                type=\"url\"\r\n                placeholder=\"http://localhost:5001\"\r\n                value={newPeerUrl}\r\n                onChange={(e) => setNewPeerUrl(e.target.value)}\r\n                aria-describedby=\"peerUrlHelp\"\r\n              />\r\n              <Form.Text id=\"peerUrlHelp\" className=\"text-muted\">\r\n                Enter the URL of the peer node you want to connect to\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowAddPeer(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleAddPeer} disabled={!newPeerUrl.trim()}>\r\n            Add Peer\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Toast Notification */}\r\n      <Toast\r\n        show={showToast}\r\n        message={toastMessage}\r\n        type={toastType}\r\n        onClose={() => setShowToast(false)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Blockchain;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}